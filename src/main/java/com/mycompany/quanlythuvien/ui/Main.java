/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.quanlythuvien.ui;

import com.mycompany.quanlythuvien.model.Book;
import com.mycompany.quanlythuvien.model.BorrowedBook;
import com.mycompany.quanlythuvien.model.BorrowedBookMember;
import com.mycompany.quanlythuvien.model.BorrowedBookStudent;
import com.mycompany.quanlythuvien.model.Card;
import com.mycompany.quanlythuvien.model.Category;
import com.mycompany.quanlythuvien.model.Member;
import com.mycompany.quanlythuvien.model.MemberCard;
import com.mycompany.quanlythuvien.model.Student;
import com.mycompany.quanlythuvien.model.StudentCard;
import com.mycompany.quanlythuvien.util.DeleteBorrowedBook;
import com.mycompany.quanlythuvien.util.DeleteCard;
import com.mycompany.quanlythuvien.util.DeleteMember;
import com.mycompany.quanlythuvien.util.DeleteSach;
import com.mycompany.quanlythuvien.util.DeleteStudent;
import com.mycompany.quanlythuvien.util.SortByCardID;
import com.mycompany.quanlythuvien.util.SortByIDBook;
import com.mycompany.quanlythuvien.util.SortByIDCategory;
import com.mycompany.quanlythuvien.util.SortByIDUser;
import java.awt.CardLayout;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HOANGPHUC
 */
public class Main extends javax.swing.JFrame {

    DBConnect con;
    DefaultTableModel tblSVModel;
    DefaultTableModel tblTVModel;
    DefaultTableModel tblTLModel;
    DefaultTableModel tblBookModel;
    DefaultTableModel tblTimmuonModel;
    DefaultTableModel tblDachonModel;
    DefaultTableModel tblThanhToanModel;
    DefaultTableModel tblDanhSachPhieuModel;
    DefaultTableModel tblChiTietPhieuMuonModel;
    DefaultTableModel tblSachDaMuonModel;
    DefaultTableModel tblLowestModel;
    DefaultTableModel tblFavoriteModel;
    DefaultTableModel tblRevenueModel;
    List<Student> listSV;
    List<Member> listTV;
    List<Category> listTL;
    List<Book> listBook;
    List<Book> SachDachon;
    int tblTLSelectedRowIndex;
    int tblSVSelectedRowIndex;
    int tblTVSelectedRowIndex;
    int tblBookSelectedRowIndex;
    int tblTimmuonSelectedRowIndex;
    int tblDachonSelectedRowIndex;
    int tblSachDaMuonSelectedRowIndex;
    DateFormat df;
    List<String> listNXB;
    List<String> listTG;
    List<String> listBookID;
    List<String> listCardID;
    static int ID = 1;
    int CardID = 1;
    int soLuongSachDaChon;
    int phiMuon = 0;
    List<Card> listCard;
    List<BorrowedBook> listBorrowedBook;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        MainPanel.setVisible(false);
        con = new DBConnect();
        tblSVModel = (DefaultTableModel) tblSV.getModel();
        tblTVModel = (DefaultTableModel) tblTV.getModel();
        tblTLModel = (DefaultTableModel) tblCategory.getModel();
        tblBookModel = (DefaultTableModel) tblBook.getModel();
        tblTimmuonModel = (DefaultTableModel) tblTimmuon.getModel();
        tblDachonModel = (DefaultTableModel) tblDachon.getModel();
        tblThanhToanModel = (DefaultTableModel) tblThanhtoan.getModel();
        tblDanhSachPhieuModel = (DefaultTableModel) tblDanhSachPhieu.getModel();
        tblChiTietPhieuMuonModel = (DefaultTableModel) tblChitietPhieumuon.getModel();
        tblSachDaMuonModel = (DefaultTableModel) tblSachDaMuon.getModel();
        tblLowestModel = (DefaultTableModel) tblLowest.getModel();
        tblFavoriteModel = (DefaultTableModel) tblFavorite.getModel();
        tblRevenueModel = (DefaultTableModel) tblRevenue.getModel();
        listSV = new ArrayList<Student>();
        listTV = new ArrayList<Member>();
        listTL = new ArrayList<Category>();
        listNXB = new ArrayList<String>();
        listTG = new ArrayList<String>();
        listBook = new ArrayList<>();
        listBookID = new ArrayList<String>();
        listCardID = new ArrayList<String>();
        SachDachon = new ArrayList<Book>();
        listCard = new ArrayList<>();
        listBorrowedBook = new ArrayList<>();
        df = new SimpleDateFormat("yyyy-MM-dd");
        rbtnSV.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtngSVSex = new javax.swing.ButtonGroup();
        rbtngTVSex = new javax.swing.ButtonGroup();
        rbtngNguoiMuon = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        btnUser = new javax.swing.JButton();
        btnCatalogue = new javax.swing.JButton();
        btnService = new javax.swing.JButton();
        btnStatistics = new javax.swing.JButton();
        btnSettings = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        ManagePanel = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnStudent = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnMember = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        cardManage = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        StudentPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtHoTenSV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        rbtnSVNam = new javax.swing.JRadioButton();
        rbtnSVNu = new javax.swing.JRadioButton();
        rbtnSVKhac = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        dcSV = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        txtEmailSV = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDiachiSV = new javax.swing.JTextField();
        txtSDTSV = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSV = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        txtFindSV = new javax.swing.JTextField();
        cbxFindSV = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        btnThemSV = new javax.swing.JButton();
        btnCapNhatSV = new javax.swing.JButton();
        btnXoaSV = new javax.swing.JButton();
        MemberPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtHoTenTV = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtMaTV = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        rbtnTVNam = new javax.swing.JRadioButton();
        rbtnTVNu = new javax.swing.JRadioButton();
        rbtnTVKhac = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        dcTV = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        txtEmailTV = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtDiachiTV = new javax.swing.JTextField();
        txtSDTTV = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTV = new javax.swing.JTable();
        jSeparator4 = new javax.swing.JSeparator();
        txtFindTV = new javax.swing.JTextField();
        cbxFindTV = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        btnThemTV = new javax.swing.JButton();
        btnCapNhatTV = new javax.swing.JButton();
        btnXoaTV = new javax.swing.JButton();
        KhoPanel = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        btnSach = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        btnTheLoai = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        cardKho = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        BookPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtNXB = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtTenSach = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtTacGia = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        cbxTheLoai = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblBook = new javax.swing.JTable();
        jSeparator7 = new javax.swing.JSeparator();
        cbxFindBook = new javax.swing.JComboBox<>();
        txtFindBook = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        btnThemSach = new javax.swing.JButton();
        btnCapNhatSach = new javax.swing.JButton();
        btnXoaSach = new javax.swing.JButton();
        CategoryPanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtTenTheLoai = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtMaTheLoai = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCategory = new javax.swing.JTable();
        jSeparator8 = new javax.swing.JSeparator();
        btnCapNhatTheLoai = new javax.swing.JButton();
        btnThemTheLoai = new javax.swing.JButton();
        btnXoaTheLoai = new javax.swing.JButton();
        ServicePanel = new javax.swing.JPanel();
        jToolBar3 = new javax.swing.JToolBar();
        btnBorrow = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        btnReturn = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        btnManageCard = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        cardService = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        MuonPanel = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtTimMuon = new javax.swing.JTextField();
        cbxTimmuon = new javax.swing.JComboBox<>();
        jSeparator12 = new javax.swing.JSeparator();
        jLabel34 = new javax.swing.JLabel();
        btnThanhToan = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblTimmuon = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblDachon = new javax.swing.JTable();
        btnChonSach = new javax.swing.JButton();
        btnTraLai = new javax.swing.JButton();
        ThanhToanPanel = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtMaNguoiMuon = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtPhiMuon = new javax.swing.JTextField();
        DCHanTra = new com.toedter.calendar.JDateChooser();
        jLabel38 = new javax.swing.JLabel();
        DCNgayMuon = new com.toedter.calendar.JDateChooser();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtMaPhieu = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        rbtnSV = new javax.swing.JRadioButton();
        rbtnTV = new javax.swing.JRadioButton();
        jLabel42 = new javax.swing.JLabel();
        txtSoLuongSach = new javax.swing.JTextField();
        jSeparator13 = new javax.swing.JSeparator();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblThanhtoan = new javax.swing.JTable();
        jLabel43 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnXacNhan = new javax.swing.JButton();
        TraPanel = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        txtTraSach = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblChitietPhieumuon = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblSachDaMuon = new javax.swing.JTable();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        btnTraPhieu = new javax.swing.JButton();
        btnTraSach = new javax.swing.JButton();
        btnTimPhieu = new javax.swing.JButton();
        QuanLyCardPanel = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblDanhSachPhieu = new javax.swing.JTable();
        StatistcsPanel = new javax.swing.JPanel();
        jToolBar4 = new javax.swing.JToolBar();
        btnLowest = new javax.swing.JButton();
        btnFavorite = new javax.swing.JButton();
        btnRevenue = new javax.swing.JButton();
        cardThongke = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        LowestPanel = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblLowest = new javax.swing.JTable();
        FavoritePanel = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblFavorite = new javax.swing.JTable();
        jLabel50 = new javax.swing.JLabel();
        RevenuePanel = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        YCRevenue = new com.toedter.calendar.JYearChooser();
        btnChonNam = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblRevenue = new javax.swing.JTable();
        SettingsPanel = new javax.swing.JPanel();
        jToolBar5 = new javax.swing.JToolBar();
        btnLoad = new javax.swing.JButton();
        jSeparator14 = new javax.swing.JToolBar.Separator();
        jSeparator15 = new javax.swing.JToolBar.Separator();
        jButton15 = new javax.swing.JButton();
        jSeparator16 = new javax.swing.JToolBar.Separator();
        jButton1 = new javax.swing.JButton();
        jSeparator17 = new javax.swing.JToolBar.Separator();
        cardSettings = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library management");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setForeground(new java.awt.Color(51, 0, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnUser.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUser.setText("Quản lý người dùng");
        btnUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserActionPerformed(evt);
            }
        });
        jPanel2.add(btnUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 30));

        btnCatalogue.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCatalogue.setText("Kho sách");
        btnCatalogue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCatalogueActionPerformed(evt);
            }
        });
        jPanel2.add(btnCatalogue, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 170, 30));

        btnService.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnService.setText("Dịch vụ");
        btnService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServiceActionPerformed(evt);
            }
        });
        jPanel2.add(btnService, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 160, 30));

        btnStatistics.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnStatistics.setText("Thống kê");
        btnStatistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatisticsActionPerformed(evt);
            }
        });
        jPanel2.add(btnStatistics, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 0, 160, 30));

        btnSettings.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSettings.setText("Cài đặt");
        btnSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingsActionPerformed(evt);
            }
        });
        jPanel2.add(btnSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, 130, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\Library.jpg")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 840, 640));

        MainPanel.setLayout(new java.awt.CardLayout());

        ManagePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToolBar1.setRollover(true);

        btnStudent.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\student.png")); // NOI18N
        btnStudent.setText("Student");
        btnStudent.setFocusable(false);
        btnStudent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStudent.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentActionPerformed(evt);
            }
        });
        jToolBar1.add(btnStudent);
        jToolBar1.add(jSeparator1);

        btnMember.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\member.png")); // NOI18N
        btnMember.setText("Member");
        btnMember.setFocusable(false);
        btnMember.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMember.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemberActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMember);
        jToolBar1.add(jSeparator2);

        ManagePanel.add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 80));

        cardManage.setLayout(new java.awt.CardLayout());
        cardManage.add(jPanel1, "card4");

        StudentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Thông tin sinh viên");
        StudentPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        jLabel3.setText("Email:");
        StudentPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 70, 20));
        StudentPanel.add(txtHoTenSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 160, -1));

        jLabel4.setText("Mã sinh viên:");
        StudentPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 70, 20));
        StudentPanel.add(txtMaSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 160, -1));

        jLabel5.setText("Họ và tên:");
        StudentPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 70, 20));

        rbtngSVSex.add(rbtnSVNam);
        rbtnSVNam.setText("Nam");
        StudentPanel.add(rbtnSVNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, -1, -1));

        rbtngSVSex.add(rbtnSVNu);
        rbtnSVNu.setText("Nữ");
        StudentPanel.add(rbtnSVNu, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, -1, -1));

        rbtngSVSex.add(rbtnSVKhac);
        rbtnSVKhac.setText("Khác");
        StudentPanel.add(rbtnSVKhac, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        jLabel6.setText("Giới tính:");
        StudentPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 70, 20));

        dcSV.setDateFormatString("yyyy-MM-dd");
        StudentPanel.add(dcSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 160, -1));

        jLabel7.setText("Ngày sinh:");
        StudentPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 70, 20));
        StudentPanel.add(txtEmailSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 150, -1));

        jLabel8.setText("Địa chỉ:");
        StudentPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 70, 20));

        jLabel9.setText("Số điện thoại:");
        StudentPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 70, 20));
        StudentPanel.add(txtDiachiSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 150, -1));
        StudentPanel.add(txtSDTSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 150, -1));

        tblSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SV", "Họ và tên", "Giới tính", "Ngày sinh", "Số điện thoại"
            }
        ));
        tblSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSV);

        StudentPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 840, 150));
        StudentPanel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 840, 10));

        txtFindSV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindSVKeyReleased(evt);
            }
        });
        StudentPanel.add(txtFindSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 220, -1));

        cbxFindSV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tìm kiếm theo tên", "Tìm kiếm theo mã sinh viên" }));
        StudentPanel.add(cbxFindSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\search.png")); // NOI18N
        StudentPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 20, 20));

        btnThemSV.setText("Thêm");
        btnThemSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSVActionPerformed(evt);
            }
        });
        StudentPanel.add(btnThemSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, -1, -1));

        btnCapNhatSV.setText("Cập nhật");
        btnCapNhatSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatSVActionPerformed(evt);
            }
        });
        StudentPanel.add(btnCapNhatSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 280, -1, -1));

        btnXoaSV.setText("Xóa sinh viên");
        btnXoaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSVActionPerformed(evt);
            }
        });
        StudentPanel.add(btnXoaSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, -1, -1));

        cardManage.add(StudentPanel, "Studentcard");

        MemberPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Thông tin thành viên");
        MemberPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        jLabel12.setText("Email:");
        MemberPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 70, 20));
        MemberPanel.add(txtHoTenTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 160, -1));

        jLabel13.setText("Mã thành viên:");
        MemberPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 80, 20));
        MemberPanel.add(txtMaTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 160, -1));

        jLabel14.setText("Họ và tên:");
        MemberPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 70, 20));

        rbtngTVSex.add(rbtnTVNam);
        rbtnTVNam.setText("Nam");
        MemberPanel.add(rbtnTVNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, -1, -1));

        rbtngTVSex.add(rbtnTVNu);
        rbtnTVNu.setText("Nữ");
        MemberPanel.add(rbtnTVNu, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, -1, -1));

        rbtngTVSex.add(rbtnTVKhac);
        rbtnTVKhac.setText("Khác");
        MemberPanel.add(rbtnTVKhac, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        jLabel15.setText("Giới tính:");
        MemberPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 70, 20));

        dcTV.setDateFormatString("yyyy-MM-dd");
        dcTV.setFocusCycleRoot(true);
        MemberPanel.add(dcTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 160, -1));

        jLabel16.setText("Ngày sinh:");
        MemberPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 70, 20));
        MemberPanel.add(txtEmailTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 150, -1));

        jLabel17.setText("Địa chỉ:");
        MemberPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 70, 20));

        jLabel18.setText("Số điện thoại:");
        MemberPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 70, 20));
        MemberPanel.add(txtDiachiTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 150, -1));
        MemberPanel.add(txtSDTTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 150, -1));

        tblTV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã TV", "Họ và tên", "Giới tính", "Ngày sinh", "Số điện thoại"
            }
        ));
        tblTV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTVMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTV);

        MemberPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 840, 150));
        MemberPanel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 840, 20));

        txtFindTV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindTVKeyReleased(evt);
            }
        });
        MemberPanel.add(txtFindTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 220, -1));

        cbxFindTV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tìm kiếm theo mã thành viên", "Tìm kiếm theo tên", " " }));
        MemberPanel.add(cbxFindTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, -1, -1));

        jLabel19.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\search.png")); // NOI18N
        MemberPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, 20, 20));

        btnThemTV.setText("Thêm");
        btnThemTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemTVActionPerformed(evt);
            }
        });
        MemberPanel.add(btnThemTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, -1, -1));

        btnCapNhatTV.setText("Cập nhật");
        btnCapNhatTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatTVActionPerformed(evt);
            }
        });
        MemberPanel.add(btnCapNhatTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 270, -1, -1));

        btnXoaTV.setText("Xóa thành viên");
        btnXoaTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTVActionPerformed(evt);
            }
        });
        MemberPanel.add(btnXoaTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, -1, -1));

        cardManage.add(MemberPanel, "Membercard");

        ManagePanel.add(cardManage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 840, 560));

        MainPanel.add(ManagePanel, "Manage");

        KhoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToolBar2.setRollover(true);
        jToolBar2.setMaximumSize(new java.awt.Dimension(110, 23));
        jToolBar2.setMinimumSize(new java.awt.Dimension(111, 23));

        btnSach.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\book.png")); // NOI18N
        btnSach.setText("Sách");
        btnSach.setFocusable(false);
        btnSach.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSach.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSachActionPerformed(evt);
            }
        });
        jToolBar2.add(btnSach);
        jToolBar2.add(jSeparator5);

        btnTheLoai.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\category.png")); // NOI18N
        btnTheLoai.setText("Thể loại");
        btnTheLoai.setFocusable(false);
        btnTheLoai.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTheLoai.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTheLoaiActionPerformed(evt);
            }
        });
        jToolBar2.add(btnTheLoai);
        jToolBar2.add(jSeparator6);

        KhoPanel.add(jToolBar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 80));

        cardKho.setLayout(new java.awt.CardLayout());
        cardKho.add(jPanel3, "card4");

        BookPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Thông tin sách");
        BookPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, -1));

        jLabel21.setText("Nhà xuất bản:");
        BookPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 80, 20));
        BookPanel.add(txtNXB, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 150, -1));

        jLabel23.setText("Tên sách:");
        BookPanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 90, 20));
        BookPanel.add(txtTenSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 150, -1));

        jLabel24.setText("Tác giả:");
        BookPanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 50, 20));
        BookPanel.add(txtTacGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 150, -1));

        jLabel25.setText("Thể loại:");
        BookPanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 50, 20));

        BookPanel.add(cbxTheLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, 150, -1));

        jLabel27.setText("Giá:");
        BookPanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 50, 20));
        BookPanel.add(txtGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, 150, -1));

        jLabel28.setText("Số lượng:");
        BookPanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 90, 20));
        BookPanel.add(txtSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 130, 150, -1));

        tblBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Tác giả", "Nhà xuất bản", "Thể loại", "Giá", "Số lượng", "Còn lại"
            }
        ));
        tblBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBookMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblBook);

        BookPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 840, 160));
        BookPanel.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 840, 10));

        cbxFindBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tìm kiếm theo tên sách", "Tìm kiếm theo mã sách", "Tìm kiếm theo tác giả", "Tìm kiếm theo nhà xuất bản" }));
        BookPanel.add(cbxFindBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 330, 160, -1));

        txtFindBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindBookActionPerformed(evt);
            }
        });
        txtFindBook.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindBookKeyReleased(evt);
            }
        });
        BookPanel.add(txtFindBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, 170, -1));

        jLabel29.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\search.png")); // NOI18N
        BookPanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 20, 20));

        btnThemSach.setText("Thêm");
        btnThemSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSachActionPerformed(evt);
            }
        });
        BookPanel.add(btnThemSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, -1, -1));

        btnCapNhatSach.setText("Cập nhật");
        btnCapNhatSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatSachActionPerformed(evt);
            }
        });
        BookPanel.add(btnCapNhatSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, -1, -1));

        btnXoaSach.setText("Xóa");
        btnXoaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSachActionPerformed(evt);
            }
        });
        BookPanel.add(btnXoaSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 240, -1, -1));

        cardKho.add(BookPanel, "Bookcard");

        CategoryPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setText("Thể loại");
        CategoryPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, -1, -1));

        jLabel30.setText("Tên thể loại:");
        CategoryPanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 70, 20));
        CategoryPanel.add(txtTenTheLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 140, -1));

        jLabel31.setText("Mã thể loại:");
        CategoryPanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 70, 20));
        CategoryPanel.add(txtMaTheLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 140, -1));

        tblCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã thể loại", "Tên thể loại"
            }
        ));
        tblCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoryMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblCategory);

        CategoryPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 840, 270));
        CategoryPanel.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 840, 20));

        btnCapNhatTheLoai.setText("Cập nhật");
        btnCapNhatTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatTheLoaiActionPerformed(evt);
            }
        });
        CategoryPanel.add(btnCapNhatTheLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, -1, -1));

        btnThemTheLoai.setText("Thêm");
        btnThemTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemTheLoaiActionPerformed(evt);
            }
        });
        CategoryPanel.add(btnThemTheLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, -1, -1));

        btnXoaTheLoai.setText("Xóa");
        btnXoaTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTheLoaiActionPerformed(evt);
            }
        });
        CategoryPanel.add(btnXoaTheLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, -1, -1));

        cardKho.add(CategoryPanel, "Categorycard");

        KhoPanel.add(cardKho, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 840, 550));

        MainPanel.add(KhoPanel, "Kho");

        ServicePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToolBar3.setRollover(true);

        btnBorrow.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\borrowbook.png")); // NOI18N
        btnBorrow.setText("Mượn sách");
        btnBorrow.setFocusable(false);
        btnBorrow.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBorrow.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowActionPerformed(evt);
            }
        });
        jToolBar3.add(btnBorrow);
        jToolBar3.add(jSeparator9);

        btnReturn.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\returnbook.png")); // NOI18N
        btnReturn.setText("Trả sách");
        btnReturn.setFocusable(false);
        btnReturn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReturn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });
        jToolBar3.add(btnReturn);
        jToolBar3.add(jSeparator10);

        btnManageCard.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\cardManage.png")); // NOI18N
        btnManageCard.setText("Quản lý phiếu mượn");
        btnManageCard.setFocusable(false);
        btnManageCard.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnManageCard.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnManageCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageCardActionPerformed(evt);
            }
        });
        jToolBar3.add(btnManageCard);
        jToolBar3.add(jSeparator11);

        ServicePanel.add(jToolBar3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 80));

        cardService.setLayout(new java.awt.CardLayout());
        cardService.add(jPanel4, "card5");

        MuonPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel32.setText("Mượn sách");
        MuonPanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, -1));

        jLabel33.setText("Tìm kiếm sách");
        MuonPanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 120, 20));

        txtTimMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimMuonActionPerformed(evt);
            }
        });
        txtTimMuon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimMuonKeyReleased(evt);
            }
        });
        MuonPanel.add(txtTimMuon, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 150, -1));

        cbxTimmuon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tìm kiếm theo tên sách", "Tìm kiếm theo mã sách", "Tìm kiếm theo tác giả", "Tìm kiếm theo nhà xuất bản" }));
        MuonPanel.add(cbxTimmuon, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 200, -1));
        MuonPanel.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 840, 20));

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel34.setText("Sách đã chọn");
        MuonPanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 330, -1, -1));

        btnThanhToan.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\pay.png")); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });
        MuonPanel.add(btnThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 520, -1, -1));

        tblTimmuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Tác giả", "Nhà xuất bản", "Thẻ loại", "Giá", "Số lượng", "Còn lại"
            }
        ));
        tblTimmuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTimmuonMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblTimmuon);

        MuonPanel.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 840, 160));

        tblDachon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Tác giả", "Nhà xuất bản", "Thẻ loại", "Giá", "Số lượng", "Còn lại"
            }
        ));
        tblDachon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDachonMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblDachon);

        MuonPanel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 840, 110));

        btnChonSach.setText("Chọn");
        btnChonSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonSachActionPerformed(evt);
            }
        });
        MuonPanel.add(btnChonSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, -1, -1));

        btnTraLai.setText("Trả lại");
        btnTraLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraLaiActionPerformed(evt);
            }
        });
        MuonPanel.add(btnTraLai, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 500, -1, -1));

        cardService.add(MuonPanel, "Muoncard");

        ThanhToanPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel35.setText("Thanh toán");
        ThanhToanPanel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        jLabel36.setText("Hạn trả:");
        ThanhToanPanel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, 50, 20));
        ThanhToanPanel.add(txtMaNguoiMuon, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 140, -1));

        jLabel37.setText("Đối tượng mượn:");
        ThanhToanPanel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 120, 40));
        ThanhToanPanel.add(txtPhiMuon, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, 90, -1));

        DCHanTra.setDateFormatString("yyyy-MM-dd");
        ThanhToanPanel.add(DCHanTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 230, 160, -1));

        jLabel38.setText("Mã người mượn:");
        ThanhToanPanel.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 110, 20));

        DCNgayMuon.setDateFormatString("yyyy-MM-dd");
        ThanhToanPanel.add(DCNgayMuon, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 160, -1));

        jLabel39.setText("Ngày mượn:");
        ThanhToanPanel.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 70, 20));

        jLabel40.setText("Mã phiếu:");
        ThanhToanPanel.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 50, 20));
        ThanhToanPanel.add(txtMaPhieu, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 140, -1));

        jLabel41.setText("Sô lượng sách:");
        ThanhToanPanel.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, 100, 20));

        rbtngNguoiMuon.add(rbtnSV);
        rbtnSV.setText("Sinh viên");
        rbtnSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnSVActionPerformed(evt);
            }
        });
        ThanhToanPanel.add(rbtnSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, -1));

        rbtngNguoiMuon.add(rbtnTV);
        rbtnTV.setText("Thành viên");
        rbtnTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnTVActionPerformed(evt);
            }
        });
        ThanhToanPanel.add(rbtnTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, -1, -1));

        jLabel42.setText("Phí mượn:");
        ThanhToanPanel.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 70, 20));
        ThanhToanPanel.add(txtSoLuongSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 70, 40, -1));
        ThanhToanPanel.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 840, 10));

        tblThanhtoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Tác giả", "Nhà xuất bản", "Thẻ loại", "Giá", "Số lượng", "Còn lại"
            }
        ));
        jScrollPane6.setViewportView(tblThanhtoan);

        ThanhToanPanel.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 840, 110));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel43.setText("Sách đã chọn");
        ThanhToanPanel.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, -1, -1));

        btnBack.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\back.png")); // NOI18N
        btnBack.setText("Quay lại");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        ThanhToanPanel.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 500, -1, -1));

        btnXacNhan.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\check.png")); // NOI18N
        btnXacNhan.setText("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });
        ThanhToanPanel.add(btnXacNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 500, -1, -1));

        cardService.add(ThanhToanPanel, "ThanhToancard");

        TraPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel44.setText("Trả sách");
        TraPanel.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));
        TraPanel.add(txtTraSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 160, -1));

        jLabel45.setText("Tìm phiếu mượn:");
        TraPanel.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 90, 20));

        tblChitietPhieumuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu", "Người mượn", "Ngày mượn", "Hạn trả", "Số lượng", "Trạng thái", "Phí mượn"
            }
        ));
        jScrollPane8.setViewportView(tblChitietPhieumuon);

        TraPanel.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 840, 60));

        tblSachDaMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu", "Mã sách", "Tên sách", "Trạng thái"
            }
        ));
        tblSachDaMuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSachDaMuonMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblSachDaMuon);

        TraPanel.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 840, 110));

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel46.setText("Sách đã mượn");
        TraPanel.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, -1, -1));

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel47.setText("Chi tiết phiếu mượn");
        TraPanel.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, -1, -1));

        btnTraPhieu.setText("Trả phiếu");
        btnTraPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraPhieuActionPerformed(evt);
            }
        });
        TraPanel.add(btnTraPhieu, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 240, -1, -1));

        btnTraSach.setText("Trả sách");
        btnTraSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraSachActionPerformed(evt);
            }
        });
        TraPanel.add(btnTraSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 470, -1, -1));

        btnTimPhieu.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\search.png")); // NOI18N
        btnTimPhieu.setText("Tìm");
        btnTimPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimPhieuActionPerformed(evt);
            }
        });
        TraPanel.add(btnTimPhieu, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, -1, -1));

        cardService.add(TraPanel, "Tracard");

        QuanLyCardPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel48.setText("Danh sách phiếu mượn");
        QuanLyCardPanel.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1, -1));

        tblDanhSachPhieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu", "Người mượn", "Ngày mượn", "Hạn trả", "Số lượng", "Trạng thái", "Phí mượn"
            }
        ));
        jScrollPane10.setViewportView(tblDanhSachPhieu);

        QuanLyCardPanel.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 840, 210));

        cardService.add(QuanLyCardPanel, "QuanLyCardcard");

        ServicePanel.add(cardService, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 840, 560));

        MainPanel.add(ServicePanel, "Service");

        StatistcsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToolBar4.setRollover(true);

        btnLowest.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\topleast.png")); // NOI18N
        btnLowest.setText("Top 10 sách còn lại ít nhất");
        btnLowest.setFocusable(false);
        btnLowest.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLowest.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLowest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLowestActionPerformed(evt);
            }
        });
        jToolBar4.add(btnLowest);

        btnFavorite.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\favorite.png")); // NOI18N
        btnFavorite.setText("Top 10 sách được mượn nhiều nhất");
        btnFavorite.setFocusable(false);
        btnFavorite.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFavorite.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFavorite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFavoriteActionPerformed(evt);
            }
        });
        jToolBar4.add(btnFavorite);

        btnRevenue.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\revenue.png")); // NOI18N
        btnRevenue.setText("Doanh thu");
        btnRevenue.setFocusable(false);
        btnRevenue.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRevenue.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRevenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevenueActionPerformed(evt);
            }
        });
        jToolBar4.add(btnRevenue);

        StatistcsPanel.add(jToolBar4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 80));

        cardThongke.setLayout(new java.awt.CardLayout());
        cardThongke.add(jPanel5, "card5");

        LowestPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel49.setText("Top 10 sách còn lại ít nhất");
        LowestPanel.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, -1, -1));

        tblLowest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã sách", "Tên sách", "Thể loại", "Tác giả", "Còn lại"
            }
        ));
        jScrollPane11.setViewportView(tblLowest);

        LowestPanel.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 840, 430));

        cardThongke.add(LowestPanel, "Lowestcard");

        FavoritePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblFavorite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã sách", "Tên sách", "Thể loại", "Tác giả", "Đâ mượn"
            }
        ));
        jScrollPane12.setViewportView(tblFavorite);

        FavoritePanel.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 840, 430));

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel50.setText("Top 10 sách được mượn nhiều nhất");
        FavoritePanel.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));

        cardThongke.add(FavoritePanel, "Favoritecard");

        RevenuePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel51.setText("Doanh thu");
        RevenuePanel.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));
        RevenuePanel.add(YCRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 140, -1));

        btnChonNam.setText("Chọn năm");
        btnChonNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonNamActionPerformed(evt);
            }
        });
        RevenuePanel.add(btnChonNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, -1, -1));

        tblRevenue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tháng", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"
            }
        ));
        jScrollPane13.setViewportView(tblRevenue);

        RevenuePanel.add(jScrollPane13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 840, 50));

        cardThongke.add(RevenuePanel, "Revenuecard");

        StatistcsPanel.add(cardThongke, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 840, 550));

        MainPanel.add(StatistcsPanel, "Statistics");

        SettingsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToolBar5.setRollover(true);

        btnLoad.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\load.png")); // NOI18N
        btnLoad.setText("Load Data");
        btnLoad.setFocusable(false);
        btnLoad.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLoad.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });
        jToolBar5.add(btnLoad);
        jToolBar5.add(jSeparator14);
        jToolBar5.add(jSeparator15);

        jButton15.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\helps.png")); // NOI18N
        jButton15.setText("Helps");
        jButton15.setFocusable(false);
        jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton15.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar5.add(jButton15);
        jToolBar5.add(jSeparator16);

        jButton1.setIcon(new javax.swing.ImageIcon("D:\\QuanLyThuVien\\src\\main\\java\\com\\mycompany\\quanlythuvien\\icon\\about.png")); // NOI18N
        jButton1.setText("About");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar5.add(jButton1);
        jToolBar5.add(jSeparator17);

        SettingsPanel.add(jToolBar5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 80));

        cardSettings.setLayout(new java.awt.CardLayout());
        cardSettings.add(jPanel17, "card4");
        cardSettings.add(jPanel16, "card3");
        cardSettings.add(jPanel15, "card2");

        SettingsPanel.add(cardSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 840, 550));

        MainPanel.add(SettingsPanel, "Settings");

        getContentPane().add(MainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 840, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServiceActionPerformed
        // TODO add your handling code here:
        MainPanel.setVisible(true);
        CardLayout main = (CardLayout) MainPanel.getLayout();
        main.show(MainPanel, "Service");
        jLabel1.setVisible(false);
    }//GEN-LAST:event_btnServiceActionPerformed

    private void btnUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserActionPerformed

        MainPanel.setVisible(true);
        CardLayout main = (CardLayout) MainPanel.getLayout();
        main.show(MainPanel, "Manage");
        jLabel1.setVisible(false);
    }//GEN-LAST:event_btnUserActionPerformed

    private void btnStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentActionPerformed
        // TODO add your handling code here:
        CardLayout ManageCard = (CardLayout) cardManage.getLayout();
        ManageCard.show(cardManage, "Studentcard");
    }//GEN-LAST:event_btnStudentActionPerformed

    private void btnMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemberActionPerformed
        // TODO add your handling code here:
        CardLayout ManageCard = (CardLayout) cardManage.getLayout();
        ManageCard.show(cardManage, "Membercard");
    }//GEN-LAST:event_btnMemberActionPerformed

    private void btnSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSachActionPerformed
        // TODO add your handling code here:
        CardLayout KhoCard = (CardLayout) cardKho.getLayout();
        KhoCard.show(cardKho, "Bookcard");
    }//GEN-LAST:event_btnSachActionPerformed

    private void btnCatalogueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCatalogueActionPerformed
        // TODO add your handling code here:
        MainPanel.setVisible(true);
        CardLayout main = (CardLayout) MainPanel.getLayout();
        main.show(MainPanel, "Kho");
        jLabel1.setVisible(false);
    }//GEN-LAST:event_btnCatalogueActionPerformed

    private void btnTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTheLoaiActionPerformed
        // TODO add your handling code here:
        CardLayout KhoCard = (CardLayout) cardKho.getLayout();
        KhoCard.show(cardKho, "Categorycard");
    }//GEN-LAST:event_btnTheLoaiActionPerformed

    private void txtTimMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimMuonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimMuonActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        CardLayout ServiceCard = (CardLayout) cardService.getLayout();
        ServiceCard.show(cardService, "ThanhToancard");
        for (int i = 0; i <= tblDachonModel.getRowCount() - 1; i++) {
            SachDachon.add(new Book(tblDachonModel.getValueAt(i, 0).toString(),
                    tblDachonModel.getValueAt(i, 1).toString(),
                    tblDachonModel.getValueAt(i, 2).toString(),
                    tblDachonModel.getValueAt(i, 3).toString(),
                    tblDachonModel.getValueAt(i, 4).toString(),
                    Integer.valueOf(tblDachonModel.getValueAt(i, 5).toString()),
                    Integer.valueOf(tblDachonModel.getValueAt(i, 6).toString()),
                    Integer.valueOf(tblDachonModel.getValueAt(i, 7).toString())));
            tblThanhToanModel.addRow(new Object[]{
                SachDachon.get(i).BookID,
                SachDachon.get(i).Name,
                SachDachon.get(i).Author,
                SachDachon.get(i).Publisher,
                SachDachon.get(i).CategoryID,
                SachDachon.get(i).Price,
                SachDachon.get(i).Amount,
                SachDachon.get(i).Available,});
        }
        txtSoLuongSach.setText(String.valueOf(soLuongSachDaChon));
        try {
            DCNgayMuon.setDate(df.parse(LocalDate.now().toString()));
            DCNgayMuon.setEnabled(false);
            DCHanTra.setDate(df.parse(LocalDate.now().plusMonths(3).toString()));
        } catch (ParseException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnBorrow.setEnabled(false);
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowActionPerformed
        // TODO add your handling code here:
        CardLayout ServiceCard = (CardLayout) cardService.getLayout();
        ServiceCard.show(cardService, "Muoncard");
    }//GEN-LAST:event_btnBorrowActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        CardLayout ServiceCard = (CardLayout) cardService.getLayout();
        ServiceCard.show(cardService, "Tracard");
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnManageCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageCardActionPerformed
        // TODO add your handling code here:
        CardLayout ServiceCard = (CardLayout) cardService.getLayout();
        ServiceCard.show(cardService, "QuanLyCardcard");
    }//GEN-LAST:event_btnManageCardActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardLayout ServiceCard = (CardLayout) cardService.getLayout();
        ServiceCard.show(cardService, "Muoncard");
        for (int i = tblThanhToanModel.getRowCount() - 1; i >= 0; i--) {
            tblThanhToanModel.removeRow(i);
        }
        SachDachon.clear();
    }//GEN-LAST:event_btnBackActionPerformed

    private void rbtnSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnSVActionPerformed
        // TODO add your handling code here:
        phiMuon = 0;
//        txtMaPhieu.setText("SV");
        while (listCardID.contains("SV" + String.valueOf(CardID))) {
            CardID++;
        }
        txtMaPhieu.setText("SV" + String.valueOf(CardID));
        txtPhiMuon.setText(String.valueOf(phiMuon));
        CardID = 1;
    }//GEN-LAST:event_rbtnSVActionPerformed

    private void btnSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingsActionPerformed
        // TODO add your handling code here:
        MainPanel.setVisible(true);
        CardLayout main = (CardLayout) MainPanel.getLayout();
        main.show(MainPanel, "Settings");
        jLabel1.setVisible(false);
    }//GEN-LAST:event_btnSettingsActionPerformed

    private void btnStatisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatisticsActionPerformed
        // TODO add your handling code here:
        MainPanel.setVisible(true);
        CardLayout main = (CardLayout) MainPanel.getLayout();
        main.show(MainPanel, "Statistics");
        jLabel1.setVisible(false);
    }//GEN-LAST:event_btnStatisticsActionPerformed

    private void btnLowestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLowestActionPerformed
        // TODO add your handling code here:
        CardLayout StatisticsCard = (CardLayout) cardThongke.getLayout();
        StatisticsCard.show(cardThongke, "Lowestcard");
        for (int i = 0; i <= tblLowestModel.getRowCount() - 1; i++) {
            tblLowestModel.removeRow(i);
        }
        ResultSet rs = con.getCard("SELECT TOP (10) * FROM Book ORDER BY Available ASC");
        int stt = 1;
        try {
            while (rs.next()) {
                tblLowestModel.addRow(new Object[]{
                    stt,
                    rs.getString("BookID"),
                    rs.getString("BookName"),
                    rs.getString("CategoryID"),
                    rs.getString("Author"),
                    rs.getString("Available")
                });
                stt++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        stt = 1;
    }//GEN-LAST:event_btnLowestActionPerformed

    private void btnFavoriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFavoriteActionPerformed
        // TODO add your handling code here:
        CardLayout StatisticsCard = (CardLayout) cardThongke.getLayout();
        StatisticsCard.show(cardThongke, "Favoritecard");
        for (int i = 0; i <= tblFavoriteModel.getRowCount() - 1; i++) {
            tblFavoriteModel.removeRow(i);
        }
        ResultSet rs = con.getCard("SELECT TOP (10) * FROM Book ORDER BY Amount - Available DESC");
        int stt = 1;
        try {
            while (rs.next()) {
                tblFavoriteModel.addRow(new Object[]{
                    stt,
                    rs.getString("BookID"),
                    rs.getString("BookName"),
                    rs.getString("CategoryID"),
                    rs.getString("Author"),
                    Integer.valueOf(rs.getString("Amount")) - Integer.valueOf(rs.getString("Available"))
                });
                stt++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        stt = 1;
    }//GEN-LAST:event_btnFavoriteActionPerformed

    private void btnRevenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevenueActionPerformed
        // TODO add your handling code here:
        CardLayout StatisticsCard = (CardLayout) cardThongke.getLayout();
        StatisticsCard.show(cardThongke, "Revenuecard");
    }//GEN-LAST:event_btnRevenueActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        // TODO add your handling code here:
        ResultSet rsSV = con.getData("SELECT * FROM Student");
        ResultSet rsTV = con.getData("SELECT * FROM Member");
        ResultSet rsTL = con.getData("SELECT * FROM Category");
        ResultSet rsSach = con.getData("SELECT * FROM Book");
        ResultSet rsSVCard = con.getData("SELECT * FROM StudentCard");
        ResultSet rsTVCard = con.getData("SELECT * FROM MemberCard");
        btnCapNhatSV.setEnabled(false);
        btnCapNhatTV.setEnabled(false);
        btnCapNhatTheLoai.setEnabled(false);
        btnCapNhatSach.setEnabled(false);
        try {
            int sttSV = 1;
            int sttTV = 1;
            while (rsTL.next()) {
                Category c = new Category();
                c.CategoryID = rsTL.getString("ID");
                c.Name = rsTL.getString("CategoryName");
                tblTLModel.addRow(new Object[]{
                    c.CategoryID,
                    c.Name
                });
                listTL.add(c);
                cbxTheLoai.addItem(c.CategoryID);
            }
            while (rsSV.next()) {
                Student s = new Student();
                s.setID(rsSV.getString("StudentID"));
                s.setName(rsSV.getString("StudentName"));
                int genderSV = Integer.parseInt(rsSV.getString("Gender"));
                s.setGender(genderSV);
                String ngaySinh1 = rsSV.getString("BirthDay");
                s.setPhoneNumber(rsSV.getString("PhoneNumber"));
                s.setEmail(rsSV.getString("Email"));
                s.setAddress(rsSV.getString("Addr"));
                s.setBirthDay(LocalDate.parse(ngaySinh1));
                String gioiTinhSV = "";
                if (genderSV == 1) {
                    gioiTinhSV = "Nam";
                } else if (genderSV == 2) {
                    gioiTinhSV = "Nữ";
                } else {
                    gioiTinhSV = "Khác";
                }
                tblSVModel.addRow(new Object[]{
                    sttSV,
                    s.getUserID(),
                    s.getName(),
                    gioiTinhSV,
                    ngaySinh1,
                    s.getPhoneNumber(),});
                sttSV++;
                listSV.add(s);
            }
            while (rsTV.next()) {
                Member m = new Member();
                m.setID(rsTV.getString("MemberID"));
                m.setName(rsTV.getString("MemberName"));
                int genderTV = Integer.parseInt(rsTV.getString("Gender"));
                m.setGender(genderTV);
                String ngaySinh2 = rsTV.getString("BirthDay");
                m.setPhoneNumber(rsTV.getString("PhoneNumber"));
                m.setEmail(rsTV.getString("Email"));
                m.setAddress(rsTV.getString("Addr"));
                m.setBirthDay(LocalDate.parse(ngaySinh2));
                String gioiTinhTV = "";
                if (genderTV == 1) {
                    gioiTinhTV = "Nam";
                } else if (genderTV == 2) {
                    gioiTinhTV = "Nữ";
                } else {
                    gioiTinhTV = "Khác";
                }
                tblTVModel.addRow(new Object[]{
                    sttTV,
                    m.getUserID(),
                    m.getName(),
                    gioiTinhTV,
                    ngaySinh2,
                    m.getPhoneNumber(),});
                sttTV++;
                listTV.add(m);
            }
            while (rsSach.next()) {
                Book b = new Book();
                b.BookID = rsSach.getString("BookID");
                b.Name = rsSach.getString("BookName");
                b.Author = rsSach.getString("Author");
                b.Publisher = rsSach.getString("Publisher");
                b.CategoryID = rsSach.getString("CategoryID");
                b.Price = Integer.parseInt(rsSach.getString("Price"));
                b.Amount = Integer.parseInt(rsSach.getString("Amount"));
                b.Available = Integer.parseInt(rsSach.getString("Available"));
                listBook.add(b);
                listBookID.add(b.BookID);
                if (!listTG.contains(b.Author)) {
                    listTG.add(b.Author);
                }
                if (!listNXB.contains(b.Publisher)) {
                    listTG.add(b.Publisher);
                }
                tblBookModel.addRow(new Object[]{
                    b.BookID,
                    b.Name,
                    b.Author,
                    b.Publisher,
                    b.CategoryID,
                    b.Price,
                    b.Amount,
                    b.Available
                });
            }
            while (rsSVCard.next()) {
                StudentCard sc = new StudentCard();
                sc.setCardID(rsSVCard.getString("CardID"));
                sc.setUserID(rsSVCard.getString("StudentID"));
                sc.setBorrowDate(LocalDate.parse(rsSVCard.getString("BorrowDate")));
                sc.setExpiryDate(LocalDate.parse(rsSVCard.getString("ExpiryDate")));
                sc.setReturnDate(LocalDate.parse(rsSVCard.getString("ReturnDate")));
                sc.setAmount(Integer.valueOf(rsSVCard.getString("Amount")));
                sc.setReturnStatus(Integer.valueOf(rsSVCard.getString("ReturnStatus")));
                sc.setExpiryStatus(Integer.valueOf(rsSVCard.getString("ExpiryStatus")));
                sc.setTotalCost(Integer.valueOf(rsSVCard.getString("Price")));
                listCard.add(sc);
                listCardID.add(sc.getCardID());
                String ReturnStatus = "";
                String ExpiryStatus = "";
                if (sc.getReturnStatus() == 1) {
                    ReturnStatus = "N";
                } else {
                    ReturnStatus = "R";
                }
                if (sc.getExpiryStatus() == 1) {
                    ExpiryStatus = "U";
                } else {
                    ExpiryStatus = "E";
                }
                String status = ReturnStatus + "-" + ExpiryStatus;
                tblDanhSachPhieuModel.addRow(new Object[]{
                    sc.getCardID(),
                    sc.getUserID(),
                    sc.getBorrowDate().toString(),
                    sc.getExpiryDate().toString(),
                    sc.getAmount(),
                    status,
                    sc.getTotalCost()
                });
            }
            while (rsTVCard.next()) {
                MemberCard mc = new MemberCard();
                mc.setCardID(rsTVCard.getString("CardID"));
                mc.setUserID(rsTVCard.getString("MemberID"));
                mc.setBorrowDate(LocalDate.parse(rsTVCard.getString("BorrowDate")));
                mc.setExpiryDate(LocalDate.parse(rsTVCard.getString("ExpiryDate")));
                mc.setReturnDate(LocalDate.parse(rsTVCard.getString("ReturnDate")));
                mc.setAmount(Integer.valueOf(rsTVCard.getString("Amount")));
                mc.setReturnStatus(Integer.valueOf(rsTVCard.getString("ReturnStatus")));
                mc.setExpiryStatus(Integer.valueOf(rsTVCard.getString("ExpiryStatus")));
                mc.setTotalCost(Integer.valueOf(rsTVCard.getString("Price")));
                listCard.add(mc);
                listCardID.add(mc.getCardID());
                String ReturnStatus = "";
                String ExpiryStatus = "";
                if (mc.getReturnStatus() == 1) {
                    ReturnStatus = "N";
                } else {
                    ReturnStatus = "R";
                }
                if (mc.getExpiryStatus() == 1) {
                    ExpiryStatus = "U";
                } else {
                    ExpiryStatus = "E";
                }
                String status = ReturnStatus + "-" + ExpiryStatus;
                tblDanhSachPhieuModel.addRow(new Object[]{
                    mc.getCardID(),
                    mc.getUserID(),
                    mc.getBorrowDate().toString(),
                    mc.getExpiryDate().toString(),
                    mc.getAmount(),
                    status,
                    mc.getTotalCost()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnLoad.setEnabled(false);

    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnThemSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSVActionPerformed
        // TODO add your handling code here:
//        System.out.println(((JTextField)dcSV.getDateEditor().getUiComponent()).getText());
        String MaSV = txtMaSV.getText();
        String Name = txtHoTenSV.getText();
        int Gender;
        if (rbtnSVNu.isSelected()) {
            Gender = 2;
        } else if (rbtnSVNam.isSelected()) {
            Gender = 1;
        } else {
            Gender = 3;
        }
        String gioiTinh = String.valueOf(Gender);
        String ngaySinh = ((JTextField) dcSV.getDateEditor().getUiComponent()).getText();
        String soDienThoai = txtSDTSV.getText();
        String Email = txtEmailSV.getText();
        String DiaChi = txtDiachiSV.getText();
        Student sv = new Student(MaSV, Name, Gender, LocalDate.parse(ngaySinh), soDienThoai);
        sv.setEmail(Email);
        sv.setAddress(DiaChi);
        String[] stringSQL = {MaSV, Name, gioiTinh, ngaySinh, soDienThoai, Email, DiaChi};
        int isInSerted = con.ExcuteSQLInsertSV(stringSQL);
        if (isInSerted != 0) {
            listSV.add(sv);
            listSV.sort(new SortByIDUser());
        }
        if (tblSVModel.getRowCount() == 0) {
            FillToTBLSV();
        } else {
            for (int i = tblSVModel.getRowCount() - 1; i >= 0; i--) {
                tblSVModel.removeRow(i);
            }
            FillToTBLSV();
        }
        ClearText();
    }//GEN-LAST:event_btnThemSVActionPerformed

    private void tblSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSVMouseClicked
        // TODO add your handling code here:
        btnThemSV.setEnabled(false);
        btnCapNhatSV.setEnabled(true);
        tblSVSelectedRowIndex = tblSV.getSelectedRow();
        txtMaSV.setText(listSV.get(tblSVSelectedRowIndex).getUserID());
        txtMaSV.setEnabled(false);
        txtHoTenSV.setText(listSV.get(tblSVSelectedRowIndex).getName());
        if (listSV.get(tblSVSelectedRowIndex).getGender() == 1) {
            rbtnSVNam.setSelected(true);
        } else if (listSV.get(tblSVSelectedRowIndex).getGender() == 2) {
            rbtnSVNu.setSelected(true);
        } else {
            rbtnSVKhac.setSelected(true);
        }
        try {
            dcSV.setDate(df.parse(listSV.get(tblSVSelectedRowIndex).getBirthDay().toString()));
        } catch (ParseException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtSDTSV.setText(listSV.get(tblSVSelectedRowIndex).getPhoneNumber());
        txtEmailSV.setText(listSV.get(tblSVSelectedRowIndex).getEmail());
        txtDiachiSV.setText(listSV.get(tblSVSelectedRowIndex).getAddress());
    }//GEN-LAST:event_tblSVMouseClicked

    private void btnCapNhatSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatSVActionPerformed
        // TODO add your handling code here:
        listSV.remove(tblSVSelectedRowIndex);
        Student sv = new Student();
        sv.setID(txtMaSV.getText());
        sv.setName(txtHoTenSV.getText());
        sv.setBirthDay(LocalDate.parse(((JTextField) dcSV.getDateEditor().getUiComponent()).getText()));
        if (rbtnSVNu.isSelected()) {
            sv.setGender(2);
        } else if (rbtnSVNam.isSelected()) {
            sv.setGender(1);
        } else {
            sv.setGender(3);
        }
        sv.setPhoneNumber(txtSDTSV.getText());
        sv.setEmail(txtEmailSV.getText());
        sv.setAddress(txtDiachiSV.getText());
        String[] stringSQL = {txtHoTenSV.getText(),
            String.valueOf(sv.getGender()),
            sv.getBirthDay().toString(),
            txtSDTSV.getText(),
            txtEmailSV.getText(),
            txtDiachiSV.getText(),
            txtMaSV.getText()};
        int isUpdated = con.ExcuteSQLUpdateSV(stringSQL);
        if (isUpdated != 0) {
            listSV.add(tblSVSelectedRowIndex, sv);
        }
        if (tblSVModel.getRowCount() == 0) {
            FillToTBLSV();
        } else {
            for (int i = tblSVModel.getRowCount() - 1; i >= 0; i--) {
                tblSVModel.removeRow(i);
            }
            FillToTBLSV();
        }
        ClearText();
        btnThemSV.setEnabled(true);
        txtMaSV.setEnabled(true);
    }//GEN-LAST:event_btnCapNhatSVActionPerformed

    private void btnXoaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSVActionPerformed
        // TODO add your handling code here:
        listSV.remove(new DeleteStudent().Delete(listSV, tblSVModel.getValueAt(tblSVSelectedRowIndex, 1).toString()));
        int rowsDeleted = con.ExcuteSQLDeleteSV(tblSVModel.getValueAt(tblSVSelectedRowIndex, 1).toString());
        tblSVModel.removeRow(tblSVSelectedRowIndex);
        ClearText();
        btnThemSV.setEnabled(true);
        txtMaSV.setEnabled(true);
    }//GEN-LAST:event_btnXoaSVActionPerformed

    private void txtFindSVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindSVKeyReleased
        // TODO add your handling code here:
        if (cbxFindSV.getSelectedItem().toString().toString().equals("Tìm kiếm theo mã sinh viên")) {
            for (int i = tblSVModel.getRowCount() - 1; i >= 0; i--) {
                tblSVModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Student WHERE StudentID LIKE N'%" + txtFindSV.getText() + "%'");

            int stt = 1;
            try {
                while (rs.next()) {
                    String gender = "";
                    if (rs.getString("Gender").equals("1")) {
                        gender = "Nam";
                    } else if (rs.getString("Gender").equals("2")) {
                        gender = "Nữ";
                    } else {
                        gender = "Khác";
                    }
                    tblSVModel.addRow(new Object[]{
                        stt,
                        rs.getString("StudentID"),
                        rs.getString("StudentName"),
                        gender,
                        rs.getString("BirthDay"),
                        rs.getString("PhoneNumber"),});
                    stt++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (cbxFindSV.getSelectedItem().toString().toString().equals("Tìm kiếm theo tên")) {
            for (int i = tblSVModel.getRowCount() - 1; i >= 0; i--) {
                tblSVModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Student WHERE StudentName LIKE N'%" + txtFindSV.getText() + "%'");

            int stt = 1;
            try {
                while (rs.next()) {
                    String gender = "";
                    if (rs.getString("Gender").equals("1")) {
                        gender = "Nam";
                    } else if (rs.getString("Gender").equals("2")) {
                        gender = "Nữ";
                    } else {
                        gender = "Khác";
                    }
                    tblSVModel.addRow(new Object[]{
                        stt,
                        rs.getString("StudentID"),
                        rs.getString("StudentName"),
                        gender,
                        rs.getString("BirthDay"),
                        rs.getString("PhoneNumber"),});
                    stt++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtFindSVKeyReleased

    private void btnThemTVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemTVActionPerformed
        // TODO add your handling code here:
        String MaTV = txtMaTV.getText();
        String Name = txtHoTenTV.getText();
        int Gender;
        if (rbtnTVNu.isSelected()) {
            Gender = 2;
        } else if (rbtnTVNam.isSelected()) {
            Gender = 1;
        } else {
            Gender = 3;
        }
        String gioiTinh = String.valueOf(Gender);
        String ngaySinh = ((JTextField) dcTV.getDateEditor().getUiComponent()).getText();
        String soDienThoai = txtSDTTV.getText();
        String Email = txtEmailTV.getText();
        String DiaChi = txtDiachiTV.getText();
        Member m = new Member(MaTV, Name, Gender, LocalDate.parse(ngaySinh), soDienThoai);
        m.setEmail(Email);
        m.setAddress(DiaChi);
        String[] stringSQL = {MaTV, Name, gioiTinh, ngaySinh, soDienThoai, Email, DiaChi};
        int isInSerted = con.ExcuteSQLInsertTV(stringSQL);
        if (isInSerted != 0) {
            listTV.add(m);
            listTV.sort(new SortByIDUser());
        }
        if (tblTVModel.getRowCount() == 0) {
            FillToTBLTV();
        } else {
            for (int i = tblTVModel.getRowCount() - 1; i >= 0; i--) {
                tblTVModel.removeRow(i);
            }
            FillToTBLTV();
        }
        ClearTextTV();
    }//GEN-LAST:event_btnThemTVActionPerformed

    private void btnCapNhatTVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatTVActionPerformed
        // TODO add your handling code here:
        listTV.remove(tblTVSelectedRowIndex);
        Member m = new Member();
        m.setID(txtMaTV.getText());
        m.setName(txtHoTenTV.getText());
        m.setBirthDay(LocalDate.parse(((JTextField) dcTV.getDateEditor().getUiComponent()).getText()));
        if (rbtnTVNu.isSelected()) {
            m.setGender(2);
        } else if (rbtnTVNam.isSelected()) {
            m.setGender(1);
        } else {
            m.setGender(3);
        }
        m.setPhoneNumber(txtSDTTV.getText());
        m.setEmail(txtEmailTV.getText());
        m.setAddress(txtDiachiTV.getText());
        String[] stringSQL = {txtHoTenTV.getText(),
            String.valueOf(m.getGender()),
            m.getBirthDay().toString(),
            txtSDTTV.getText(),
            txtEmailTV.getText(),
            txtDiachiTV.getText(),
            txtMaTV.getText()};
        int isUpdated = con.ExcuteSQLUpdateTV(stringSQL);
        if (isUpdated != 0) {
            listTV.add(tblTVSelectedRowIndex, m);
        }
        if (tblTVModel.getRowCount() == 0) {
            FillToTBLTV();
        } else {
            for (int i = tblTVModel.getRowCount() - 1; i >= 0; i--) {
                tblTVModel.removeRow(i);
            }
            FillToTBLTV();
        }
        ClearTextTV();
        txtMaTV.setEnabled(true);
        btnThemTV.setEnabled(true);
    }//GEN-LAST:event_btnCapNhatTVActionPerformed

    private void btnXoaTVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTVActionPerformed
        // TODO add your handling code here:
        listTV.remove(new DeleteMember().Delete(listTV, tblTVModel.getValueAt(tblTVSelectedRowIndex, 1).toString()));
        int rowsDeleted = con.ExcuteSQLDeleteTV(tblTVModel.getValueAt(tblTVSelectedRowIndex, 1).toString());
        tblTVModel.removeRow(tblTVSelectedRowIndex);
        ClearTextTV();
        btnThemTV.setEnabled(true);
        txtMaTV.setEnabled(true);
    }//GEN-LAST:event_btnXoaTVActionPerformed

    private void txtFindTVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindTVKeyReleased
        // TODO add your handling code here:
        if (cbxFindTV.getSelectedItem().toString().toString().equals("Tìm kiếm theo mã thành viên")) {
            for (int i = tblTVModel.getRowCount() - 1; i >= 0; i--) {
                tblTVModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Member WHERE MemberID LIKE N'%" + txtFindTV.getText() + "%'");

            int stt = 1;
            try {
                while (rs.next()) {
                    String gender = "";
                    if (rs.getString("Gender").equals("1")) {
                        gender = "Nam";
                    } else if (rs.getString("Gender").equals("2")) {
                        gender = "Nữ";
                    } else {
                        gender = "Khác";
                    }
                    tblTVModel.addRow(new Object[]{
                        stt,
                        rs.getString("MemberID"),
                        rs.getString("MemberName"),
                        gender,
                        rs.getString("BirthDay"),
                        rs.getString("PhoneNumber"),});
                    stt++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (cbxFindTV.getSelectedItem().toString().toString().equals("Tìm kiếm theo tên")) {
            for (int i = tblTVModel.getRowCount() - 1; i >= 0; i--) {
                tblTVModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Member WHERE MemberName LIKE N'%" + txtFindTV.getText() + "%'");

            int stt = 1;
            try {
                while (rs.next()) {
                    String gender = "";
                    if (rs.getString("Gender").equals("1")) {
                        gender = "Nam";
                    } else if (rs.getString("Gender").equals("2")) {
                        gender = "Nữ";
                    } else {
                        gender = "Khác";
                    }
                    tblTVModel.addRow(new Object[]{
                        stt,
                        rs.getString("MemberID"),
                        rs.getString("MemberName"),
                        gender,
                        rs.getString("BirthDay"),
                        rs.getString("PhoneNumber"),});
                    stt++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtFindTVKeyReleased

    private void tblTVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTVMouseClicked
        // TODO add your handling code here:
        btnCapNhatTV.setEnabled(true);
        btnThemTV.setEnabled(false);
        tblTVSelectedRowIndex = tblTV.getSelectedRow();
        txtMaTV.setText(listTV.get(tblTVSelectedRowIndex).getUserID());
        txtMaTV.setEnabled(false);
        txtHoTenTV.setText(listTV.get(tblTVSelectedRowIndex).getName());
        if (listTV.get(tblTVSelectedRowIndex).getGender() == 1) {
            rbtnTVNam.setSelected(true);
        } else if (listTV.get(tblTVSelectedRowIndex).getGender() == 2) {
            rbtnTVNu.setSelected(true);
        } else {
            rbtnTVKhac.setSelected(true);
        }
        try {
            dcTV.setDate(df.parse(listTV.get(tblTVSelectedRowIndex).getBirthDay().toString()));
        } catch (ParseException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtSDTTV.setText(listSV.get(tblTVSelectedRowIndex).getPhoneNumber());
        txtEmailTV.setText(listTV.get(tblTVSelectedRowIndex).getEmail());
        txtDiachiTV.setText(listTV.get(tblTVSelectedRowIndex).getAddress());
    }//GEN-LAST:event_tblTVMouseClicked

    private void btnThemTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemTheLoaiActionPerformed
        // TODO add your handling code here:
        Category c = new Category();
        c.CategoryID = txtMaTheLoai.getText();
        c.Name = txtTenTheLoai.getText();
        String[] stringSQL = {txtMaTheLoai.getText(), txtTenTheLoai.getText()};
        int isInserted = con.ExcuteSQLInsertTL(stringSQL);
        if (isInserted != 0) {
            listTL.add(c);
            listTL.sort(new SortByIDCategory());
            cbxTheLoai.addItem(c.CategoryID);
        }
        if (tblTLModel.getRowCount() == 0) {
            FillToTBLTL();
        } else {
            for (int i = tblTLModel.getRowCount() - 1; i >= 0; i--) {
                tblTLModel.removeRow(i);
            }
            FillToTBLTL();
        }
        ClearTextTL();
    }//GEN-LAST:event_btnThemTheLoaiActionPerformed

    private void btnCapNhatTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatTheLoaiActionPerformed
        // TODO add your handling code here:
        listTL.remove(tblTLSelectedRowIndex);
        Category c = new Category();
        c.CategoryID = txtMaTheLoai.getText();
        c.Name = txtTenTheLoai.getText();
        String[] stringSQL = {txtTenTheLoai.getText(), txtMaTheLoai.getText()};
        int isUpdated = con.ExcuteSQLUpdateTL(stringSQL);
        if (isUpdated != 0) {
            listTL.add(tblTLSelectedRowIndex, c);
        }
        if (tblTLModel.getRowCount() == 0) {
            FillToTBLTL();
        } else {
            for (int i = tblTLModel.getRowCount() - 1; i >= 0; i--) {
                tblTLModel.removeRow(i);
            }
            FillToTBLTL();
        }
        ClearTextTL();
        btnThemTheLoai.setEnabled(true);
        txtMaTheLoai.setEnabled(true);
    }//GEN-LAST:event_btnCapNhatTheLoaiActionPerformed

    private void btnXoaTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTheLoaiActionPerformed
        // TODO add your handling code here:
        listTL.remove(tblTLSelectedRowIndex);
        int rowsDeleted = con.ExcuteSQLDeleteTL(tblTLModel.getValueAt(tblTLSelectedRowIndex, 0).toString());
        cbxTheLoai.removeItem(tblTLModel.getValueAt(tblTLSelectedRowIndex, 0).toString());
        tblTLModel.removeRow(tblTLSelectedRowIndex);
        ClearTextTL();
        btnThemTheLoai.setEnabled(true);
        txtMaTheLoai.setEnabled(true);
    }//GEN-LAST:event_btnXoaTheLoaiActionPerformed

    private void tblCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoryMouseClicked
        // TODO add your handling code here:
        btnCapNhatTheLoai.setEnabled(true);
        btnThemTheLoai.setEnabled(false);
        tblTLSelectedRowIndex = tblCategory.getSelectedRow();
        txtMaTheLoai.setText(listTL.get(tblTLSelectedRowIndex).CategoryID);
        txtMaTheLoai.setEnabled(false);
        txtTenTheLoai.setText(listTL.get(tblTLSelectedRowIndex).Name);
    }//GEN-LAST:event_tblCategoryMouseClicked

    private void btnThemSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSachActionPerformed
        // TODO add your handling code here:
        Book b = new Book();
//        b.BookID = cbxTheLoai.getSelectedItem().toString() + String.valueOf(ID++);
//        String BookID = cbxTheLoai.getSelectedItem().toString() + String.valueOf(ID);
        while (listBookID.contains(cbxTheLoai.getSelectedItem().toString() + String.valueOf(ID))) {
            ID++;
        }
        b.BookID = cbxTheLoai.getSelectedItem().toString() + String.valueOf(ID);
        b.Name = txtTenSach.getText();
        b.Author = txtTacGia.getText();
        b.Publisher = txtNXB.getText();
        b.CategoryID = cbxTheLoai.getSelectedItem().toString();
        b.Price = Integer.parseInt(txtGia.getText());
        b.Amount = Integer.parseInt(txtSoLuong.getText());
        b.Available = b.Amount;
        String[] stringSQL = {b.BookID, b.Name, b.Author, b.Publisher, b.CategoryID, String.valueOf(b.Price), String.valueOf(b.Amount), String.valueOf(b.Available)};
        int isInserted = con.ExcuteSQLInsertBook(stringSQL);
        if (isInserted != 0) {
            listBook.add(b);
            listBookID.add(b.BookID);
            listBook.sort(new SortByIDBook());
            if (!listTG.contains(b.Author)) {
                listTG.add(b.Author);
            }
            if (!listNXB.contains(b.Publisher)) {
                listTG.add(b.Publisher);
            }
        }
        if (tblBookModel.getRowCount() == 0) {
            FillToTBLBook();
        } else {
            for (int i = tblBookModel.getRowCount() - 1; i >= 0; i--) {
                tblBookModel.removeRow(i);
            }
            FillToTBLBook();
        }
        ClearTextBook();
        ID = 1;
    }//GEN-LAST:event_btnThemSachActionPerformed

    private void btnCapNhatSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatSachActionPerformed
        // TODO add your handling code here:
//        listBook.remove(tblBookSelectedRowIndex);
        Book b = new Book();
        b.BookID = listBook.get(tblBookSelectedRowIndex).BookID;
        b.Name = txtTenSach.getText();
        b.Author = txtTacGia.getText();
        b.Publisher = txtNXB.getText();
        b.CategoryID = cbxTheLoai.getSelectedItem().toString();
        b.Price = Integer.parseInt(txtGia.getText());
        b.Amount = Integer.parseInt(txtSoLuong.getText());
        b.Available = b.Amount;
        listBook.remove(tblBookSelectedRowIndex);
        String[] stringSQL = {b.Name, b.Author, b.Publisher, b.CategoryID, String.valueOf(b.Price), String.valueOf(b.Amount), String.valueOf(b.Available), b.BookID};
        int isUpdated = con.ExcuteSQLUpdateBook(stringSQL);
        if (isUpdated != 0) {
            listBook.add(b);
            listBook.sort(new SortByIDBook());
            if (!listTG.contains(b.Author)) {
                listTG.add(b.Author);
            }
            if (!listNXB.contains(b.Publisher)) {
                listTG.add(b.Publisher);
            }
        }
        if (tblBookModel.getRowCount() == 0) {
            FillToTBLBook();
        } else {
            for (int i = tblBookModel.getRowCount() - 1; i >= 0; i--) {
                tblBookModel.removeRow(i);
            }
            FillToTBLBook();
        }
        ClearTextBook();
        btnThemSach.setEnabled(true);
        btnCapNhatSach.setEnabled(false);
    }//GEN-LAST:event_btnCapNhatSachActionPerformed

    private void btnXoaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSachActionPerformed
        // TODO add your handling code here:
        listBook.remove(new DeleteSach().Delete(listBook, tblBookModel.getValueAt(tblBookSelectedRowIndex, 0).toString()));
        listBookID.remove(tblBookModel.getValueAt(tblBookSelectedRowIndex, 0).toString());
        int rowDeleted = con.ExcuteSQLDeleteBook(tblBookModel.getValueAt(tblBookSelectedRowIndex, 0).toString());
        tblBookModel.removeRow(tblBookSelectedRowIndex);
        ClearTextBook();
        btnThemSach.setEnabled(true);
        btnCapNhatSach.setEnabled(false);
        btnXoaSach.setEnabled(false);
    }//GEN-LAST:event_btnXoaSachActionPerformed

    private void tblBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBookMouseClicked
        // TODO add your handling code here:
        btnCapNhatSach.setEnabled(true);
        btnXoaSach.setEnabled(true);
        tblBookSelectedRowIndex = tblBook.getSelectedRow();
        txtTenSach.setText(listBook.get(tblBookSelectedRowIndex).Name);
        txtTacGia.setText(listBook.get(tblBookSelectedRowIndex).Author);
        txtNXB.setText(listBook.get(tblBookSelectedRowIndex).Publisher);
        cbxTheLoai.setSelectedItem(listBook.get(tblBookSelectedRowIndex).Publisher);
        txtGia.setText(String.valueOf(listBook.get(tblBookSelectedRowIndex).Price));
        txtSoLuong.setText(String.valueOf(listBook.get(tblBookSelectedRowIndex).Amount));
    }//GEN-LAST:event_tblBookMouseClicked

    private void txtFindBookKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindBookKeyReleased
        // TODO add your handling code here:
        if (cbxFindBook.getSelectedItem().toString().equals("Tìm kiếm theo tên sách")) {
            for (int i = tblBookModel.getRowCount() - 1; i >= 0; i--) {
                tblBookModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Book WHERE BookName LIKE N'%" + txtFindBook.getText() + "%'");
            try {
                while (rs.next()) {
                    tblBookModel.addRow(new Object[]{
                        rs.getString("BookID"),
                        rs.getString("BookName"),
                        rs.getString("Author"),
                        rs.getString("Publisher"),
                        rs.getString("CategoryID"),
                        rs.getString("Price"),
                        rs.getString("Amount"),
                        rs.getString("Available"),});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (cbxFindBook.getSelectedItem().toString().equals("Tìm kiếm theo mã sách")) {
            for (int i = tblBookModel.getRowCount() - 1; i >= 0; i--) {
                tblBookModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Book WHERE BookID LIKE N'%" + txtFindBook.getText() + "%'");
            try {
                while (rs.next()) {
                    tblBookModel.addRow(new Object[]{
                        rs.getString("BookID"),
                        rs.getString("BookName"),
                        rs.getString("Author"),
                        rs.getString("Publisher"),
                        rs.getString("CategoryID"),
                        rs.getString("Price"),
                        rs.getString("Amount"),
                        rs.getString("Available"),});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (cbxFindBook.getSelectedItem().toString().equals("Tìm kiếm theo tác giả")) {
            for (int i = tblBookModel.getRowCount() - 1; i >= 0; i--) {
                tblBookModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Book WHERE Author LIKE N'%" + txtFindBook.getText() + "%'");
            try {
                while (rs.next()) {
                    tblBookModel.addRow(new Object[]{
                        rs.getString("BookID"),
                        rs.getString("BookName"),
                        rs.getString("Author"),
                        rs.getString("Publisher"),
                        rs.getString("CategoryID"),
                        rs.getString("Price"),
                        rs.getString("Amount"),
                        rs.getString("Available"),});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            for (int i = tblBookModel.getRowCount() - 1; i >= 0; i--) {
                tblBookModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Book WHERE Publisher LIKE N'%" + txtFindBook.getText() + "%'");
            try {
                while (rs.next()) {
                    tblBookModel.addRow(new Object[]{
                        rs.getString("BookID"),
                        rs.getString("BookName"),
                        rs.getString("Author"),
                        rs.getString("Publisher"),
                        rs.getString("CategoryID"),
                        rs.getString("Price"),
                        rs.getString("Amount"),
                        rs.getString("Available"),});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_txtFindBookKeyReleased

    private void txtFindBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFindBookActionPerformed

    private void txtTimMuonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimMuonKeyReleased
        // TODO add your handling code here:
        if (cbxTimmuon.getSelectedItem().toString().equals("Tìm kiếm theo tên sách")) {
            for (int i = tblTimmuonModel.getRowCount() - 1; i >= 0; i--) {
                tblTimmuonModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Book WHERE BookName LIKE N'%" + txtTimMuon.getText() + "%'");
            try {
                while (rs.next()) {
                    tblTimmuonModel.addRow(new Object[]{
                        rs.getString("BookID"),
                        rs.getString("BookName"),
                        rs.getString("Author"),
                        rs.getString("Publisher"),
                        rs.getString("CategoryID"),
                        rs.getString("Price"),
                        rs.getString("Amount"),
                        rs.getString("Available"),});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (cbxTimmuon.getSelectedItem().toString().equals("Tìm kiếm theo mã sách")) {
            for (int i = tblTimmuonModel.getRowCount() - 1; i >= 0; i--) {
                tblTimmuonModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Book WHERE BookID LIKE N'%" + txtTimMuon.getText() + "%'");
            try {
                while (rs.next()) {
                    tblTimmuonModel.addRow(new Object[]{
                        rs.getString("BookID"),
                        rs.getString("BookName"),
                        rs.getString("Author"),
                        rs.getString("Publisher"),
                        rs.getString("CategoryID"),
                        rs.getString("Price"),
                        rs.getString("Amount"),
                        rs.getString("Available"),});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (cbxTimmuon.getSelectedItem().toString().equals("Tìm kiếm theo tác giả")) {
            for (int i = tblTimmuonModel.getRowCount() - 1; i >= 0; i--) {
                tblTimmuonModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Book WHERE Author LIKE N'%" + txtTimMuon.getText() + "%'");
            try {
                while (rs.next()) {
                    tblTimmuonModel.addRow(new Object[]{
                        rs.getString("BookID"),
                        rs.getString("BookName"),
                        rs.getString("Author"),
                        rs.getString("Publisher"),
                        rs.getString("CategoryID"),
                        rs.getString("Price"),
                        rs.getString("Amount"),
                        rs.getString("Available"),});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            for (int i = tblTimmuonModel.getRowCount() - 1; i >= 0; i--) {
                tblTimmuonModel.removeRow(i);
            }
            ResultSet rs = con.getData("SELECT * FROM Book WHERE Publisher LIKE N'%" + txtTimMuon.getText() + "%'");
            try {
                while (rs.next()) {
                    tblTimmuonModel.addRow(new Object[]{
                        rs.getString("BookID"),
                        rs.getString("BookName"),
                        rs.getString("Author"),
                        rs.getString("Publisher"),
                        rs.getString("CategoryID"),
                        rs.getString("Price"),
                        rs.getString("Amount"),
                        rs.getString("Available"),});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtTimMuonKeyReleased

    private void tblTimmuonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTimmuonMouseClicked
        // TODO add your handling code here:
        tblTimmuonSelectedRowIndex = tblTimmuon.getSelectedRow();
    }//GEN-LAST:event_tblTimmuonMouseClicked

    private void btnChonSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonSachActionPerformed
        // TODO add your handling code here:
        soLuongSachDaChon = tblDachonModel.getRowCount();
        if (soLuongSachDaChon < 5) {
            for (int i = 0; i <= listBook.size() - 1; i++) {
                if (listBook.get(i).BookID.equals(tblTimmuonModel.getValueAt(tblTimmuonSelectedRowIndex, 0).toString())) {
                    if (listBook.get(i).Available > 0) {
                        listBook.get(i).Available--;
                        for (int j = tblBookModel.getRowCount() - 1; j >= 0; j--) {
                            tblBookModel.removeRow(j);
                        }
                        for (int j = tblTimmuonModel.getRowCount() - 1; j >= 0; j--) {
                            tblTimmuonModel.removeRow(j);
                        }
                        FillToTBLBook();
                        FillToTBLTimMuon();
                        txtTimMuon.setText("");
                        String[] sql = {String.valueOf(listBook.get(i).Available), listBook.get(i).BookID};
                        int rowUpdated = con.ExcuteSQLUpdateBookBookAvailble(sql);
                        tblDachonModel.addRow(new Object[]{
                            tblTimmuonModel.getValueAt(tblTimmuonSelectedRowIndex, 0).toString(),
                            tblTimmuonModel.getValueAt(tblTimmuonSelectedRowIndex, 1).toString(),
                            tblTimmuonModel.getValueAt(tblTimmuonSelectedRowIndex, 2).toString(),
                            tblTimmuonModel.getValueAt(tblTimmuonSelectedRowIndex, 3).toString(),
                            tblTimmuonModel.getValueAt(tblTimmuonSelectedRowIndex, 4).toString(),
                            tblTimmuonModel.getValueAt(tblTimmuonSelectedRowIndex, 5).toString(),
                            tblTimmuonModel.getValueAt(tblTimmuonSelectedRowIndex, 6).toString(),
                            String.valueOf(listBook.get(i).Available),});
                        soLuongSachDaChon++;
                    } else {
                        JOptionPane.showMessageDialog(this, "Sách đã hết", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chọn tối đa 5 sách", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnChonSachActionPerformed

    private void tblDachonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDachonMouseClicked
        // TODO add your handling code here:
        tblDachonSelectedRowIndex = tblDachon.getSelectedRow();
    }//GEN-LAST:event_tblDachonMouseClicked

    private void btnTraLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraLaiActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i <= listBook.size() - 1; i++) {
            if (listBook.get(i).BookID.equals(tblDachonModel.getValueAt(tblDachonSelectedRowIndex, 0).toString())) {
                listBook.get(i).Available++;
                for (int j = tblBookModel.getRowCount() - 1; j >= 0; j--) {
                    tblBookModel.removeRow(j);
                }
                for (int j = tblTimmuonModel.getRowCount() - 1; j >= 0; j--) {
                    tblTimmuonModel.removeRow(j);
                }
                FillToTBLBook();
                FillToTBLTimMuon();
                txtTimMuon.setText("");
                String[] sql = {String.valueOf(listBook.get(i).Available), listBook.get(i).BookID};
                int rowUpdated = con.ExcuteSQLUpdateBookBookAvailble(sql);
            }
        }
        tblDachonModel.removeRow(tblDachonSelectedRowIndex);

    }//GEN-LAST:event_btnTraLaiActionPerformed

    private void rbtnTVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnTVActionPerformed
        // TODO add your handling code here:
        while (listCardID.contains("TV" + String.valueOf(CardID))) {
            CardID++;
        }
        txtMaPhieu.setText("TV" + String.valueOf(CardID));
        for (Book b : SachDachon) {
            phiMuon += b.Price;
        }
        txtPhiMuon.setText(String.valueOf(phiMuon));
        CardID = 1;
    }//GEN-LAST:event_rbtnTVActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
        if (LocalDate.parse(((JTextField) DCHanTra.getDateEditor().getUiComponent()).getText())
                .isBefore(LocalDate.parse(((JTextField) DCNgayMuon.getDateEditor().getUiComponent()).getText()))
                || LocalDate.parse(((JTextField) DCHanTra.getDateEditor().getUiComponent()).getText())
                        .isAfter(LocalDate.parse(((JTextField) DCNgayMuon.getDateEditor().getUiComponent()).getText()).plusMonths(3))) {
            JOptionPane.showMessageDialog(this, "Hạn trả không hợp lệ", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        } else {
            if (rbtnSV.isSelected()) {
                StudentCard c = new StudentCard();
                c.setCardID(txtMaPhieu.getText());
                c.setUserID(txtMaNguoiMuon.getText());
                c.setBorrowDate(LocalDate.parse(((JTextField) DCNgayMuon.getDateEditor().getUiComponent()).getText()));
                c.setExpiryDate(LocalDate.parse(((JTextField) DCHanTra.getDateEditor().getUiComponent()).getText()));
                c.setReturnDate(LocalDate.parse(((JTextField) DCHanTra.getDateEditor().getUiComponent()).getText()));
                c.setReturnStatus(1);
                c.setExpiryStatus(1);
                c.setAmount(soLuongSachDaChon);
                c.setTotalCost(Integer.valueOf(txtPhiMuon.getText()));
                listCard.add(c);
                listCardID.add(c.getCardID());
                String[] stringSQL = {c.getCardID(),
                    c.getUserID(),
                    c.getBorrowDate().toString(),
                    c.getExpiryDate().toString(),
                    c.getReturnDate().toString(),
                    String.valueOf(c.getAmount()),
                    String.valueOf(c.getReturnStatus()),
                    String.valueOf(c.getExpiryStatus()),
                    String.valueOf(c.getTotalCost())};
                int rowInsetedCard = con.ExcuteSQLInsertStudentCard(stringSQL);
                for (Book b : SachDachon) {
                    BorrowedBookStudent s = new BorrowedBookStudent(txtMaPhieu.getText(), b.BookID, b.Name, 1);
                    listBorrowedBook.add(s);
                    String[] SQL = {txtMaPhieu.getText(), b.BookID, String.valueOf(1), b.Name};
                    int rowInserted = con.ExcuteSQLInsertBorrowedBookStudent(SQL);
                }
                for (int j = tblDanhSachPhieuModel.getRowCount() - 1; j >= 0; j--) {
                    tblDanhSachPhieuModel.removeRow(j);
                }
                FillToTBLDanhSachPhieu();
            } else {
                MemberCard c = new MemberCard();
                c.setCardID(txtMaPhieu.getText());
                c.setUserID(txtMaNguoiMuon.getText());
                c.setBorrowDate(LocalDate.parse(((JTextField) DCNgayMuon.getDateEditor().getUiComponent()).getText()));
                c.setExpiryDate(LocalDate.parse(((JTextField) DCHanTra.getDateEditor().getUiComponent()).getText()));
                c.setReturnDate(LocalDate.parse(((JTextField) DCHanTra.getDateEditor().getUiComponent()).getText()));
                c.setReturnStatus(1);
                c.setExpiryStatus(1);
                c.setAmount(soLuongSachDaChon);
                c.setTotalCost(Integer.valueOf(txtPhiMuon.getText()));
                listCard.add(c);
                listCardID.add(c.getCardID());
                String[] stringSQL = {c.getCardID(),
                    c.getUserID(),
                    c.getBorrowDate().toString(),
                    c.getExpiryDate().toString(),
                    c.getReturnDate().toString(),
                    String.valueOf(c.getAmount()),
                    String.valueOf(c.getReturnStatus()),
                    String.valueOf(c.getExpiryStatus()),
                    String.valueOf(c.getTotalCost())};
                int rowInsetedCard = con.ExcuteSQLInsertMemberCard(stringSQL);
                for (Book b : SachDachon) {
                    BorrowedBookMember m = new BorrowedBookMember(txtMaPhieu.getText(), b.BookID, b.Name, 1);
                    listBorrowedBook.add(m);
                    String[] SQL = {txtMaPhieu.getText(), b.BookID, String.valueOf(1), b.Name};
                    int rowInserted = con.ExcuteSQLInsertBorrowedBookMember(SQL);
                }
                for (int j = tblDanhSachPhieuModel.getRowCount() - 1; j >= 0; j--) {
                    tblDanhSachPhieuModel.removeRow(j);
                }
                FillToTBLDanhSachPhieu();
            }
            // Cập nhật lại số lượng sách
            ClearTextThanhToan();
            for (int i = tblDachonModel.getRowCount() - 1; i >= 0; i--) {
                tblDachonModel.removeRow(i);
            }
            for (int i = tblThanhToanModel.getRowCount() - 1; i >= 0; i--) {
                tblThanhToanModel.removeRow(i);
            }
            btnBorrow.setEnabled(true);
        }

    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnTimPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimPhieuActionPerformed
        // TODO add your handling code here:
        for (int i = tblChiTietPhieuMuonModel.getRowCount() - 1; i >= 0; i--) {
            tblChiTietPhieuMuonModel.removeRow(i);
        }
        if (txtTraSach.getText().indexOf("SV") >= 0) {
            String statement = "SELECT * FROM StudentCard WHERE CardID = '" + txtTraSach.getText() + "'";
            String statement2 = "SELECT * FROM BorrowedBookStudent WHERE CardID = '" + txtTraSach.getText() + "'";
            ResultSet rs = con.getCard(statement);
            ResultSet rs2 = con.getCard(statement2);
            try {
                while (rs.next()) {
                    String ReturnStatus = "";
                    String ExpiryStatus = "";
                    if (rs.getString("ReturnStatus").equals("1")) {
                        ReturnStatus = "N";
                    } else {
                        ReturnStatus = "R";
                    }
                    if (rs.getString("ExpiryStatus").equals("1")) {
                        ExpiryStatus = "U";
                    } else {
                        ExpiryStatus = "E";
                    }
                    String status = ReturnStatus + "-" + ExpiryStatus;
                    tblChiTietPhieuMuonModel.addRow(new Object[]{
                        rs.getString("CardID"),
                        rs.getString("StudentID"),
                        rs.getString("BorrowDate"),
                        rs.getString("ExpiryDate"),
                        rs.getString("Amount"),
                        status,
                        rs.getString("Price"),});
                }
                while (rs2.next()) {
                    String BookStatus = "";
                    if (rs2.getString("BookStatus").equals("1")) {
                        BookStatus = "N";
                    } else {
                        BookStatus = "R";
                    }
                    tblSachDaMuonModel.addRow(new Object[]{
                        rs2.getString("CardID"),
                        rs2.getString("BookID"),
                        rs2.getString("BookName"),
                        BookStatus
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            String statement = "SELECT * FROM MemberCard WHERE CardID = '" + txtTraSach.getText() + "'";
            String statement2 = "SELECT * FROM BorrowedBookMember WHERE CardID = '" + txtTraSach.getText() + "'";
            ResultSet rs = con.getCard(statement);
            ResultSet rs2 = con.getCard(statement2);
            try {
                while (rs.next()) {
                    String ReturnStatus = "";
                    String ExpiryStatus = "";
                    if (rs.getString("ReturnStatus").equals("1")) {
                        ReturnStatus = "N";
                    } else {
                        ReturnStatus = "R";
                    }
                    if (rs.getString("ExpiryStatus").equals("1")) {
                        ExpiryStatus = "U";
                    } else {
                        ExpiryStatus = "E";
                    }
                    String status = ReturnStatus + "-" + ExpiryStatus;
                    tblChiTietPhieuMuonModel.addRow(new Object[]{
                        rs.getString("CardID"),
                        rs.getString("MemberID"),
                        rs.getString("BorrowDate"),
                        rs.getString("ExpiryDate"),
                        rs.getString("Amount"),
                        status,
                        rs.getString("Price"),});
                }
                while (rs2.next()) {
                    String BookStatus = "";
                    if (rs2.getString("BookStatus").equals("1")) {
                        BookStatus = "N";
                    } else {
                        BookStatus = "R";
                    }
                    tblSachDaMuonModel.addRow(new Object[]{
                        rs2.getString("CardID"),
                        rs2.getString("BookID"),
                        rs2.getString("BookName"),
                        BookStatus
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnTimPhieuActionPerformed

    private void btnTraSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraSachActionPerformed
        // TODO add your handling code here:
        if (tblSachDaMuonModel.getValueAt(tblSachDaMuonSelectedRowIndex, 0).toString().indexOf("SV") >= 0) {
            listBorrowedBook.remove(new DeleteBorrowedBook().Delete(listBorrowedBook, tblSachDaMuonModel.getValueAt(tblSachDaMuonSelectedRowIndex, 1).toString()));
            int rowDeleted = con.ExcuteSQLDeleteBorrowedBookStudent(tblSachDaMuonModel.getValueAt(tblSachDaMuonSelectedRowIndex, 1).toString());
            int soLuong = Integer.valueOf(tblChiTietPhieuMuonModel.getValueAt(0, 4).toString());
            for (int i = 0; i <= listBook.size() - 1; i++) {
                if (listBook.get(i).BookID.equals(tblSachDaMuonModel.getValueAt(tblSachDaMuonSelectedRowIndex, 1).toString())) {
                    ++listBook.get(i).Available;
                    int rowUpdated = con.ExcuteSQLUpdateBookBookAvailble(new String[]{
                        String.valueOf(listBook.get(i).Available),
                        listBook.get(i).BookID
                    });
                    break;
                }
            }
            for (int j = tblBookModel.getRowCount() - 1; j >= 0; j--) {
                tblBookModel.removeRow(j);
            }
            for (int j = tblTimmuonModel.getRowCount() - 1; j >= 0; j--) {
                tblTimmuonModel.removeRow(j);
            }
            FillToTBLBook();
            FillToTBLTimMuon();
            tblChiTietPhieuMuonModel.setValueAt(String.valueOf(soLuong - 1), 0, 4);
            int amountUpdated = con.ExcuteSQLUpdateStudentCardAmount(new String[]{
                String.valueOf(soLuong - 1),
                tblSachDaMuonModel.getValueAt(tblSachDaMuonSelectedRowIndex, 0).toString()
            });
            tblSachDaMuonModel.removeRow(tblSachDaMuonSelectedRowIndex);
        } else {
            listBorrowedBook.remove(new DeleteBorrowedBook().Delete(listBorrowedBook, tblSachDaMuonModel.getValueAt(tblSachDaMuonSelectedRowIndex, 1).toString()));
            int rowDeleted = con.ExcuteSQLDeleteBorrowedBookMember(tblSachDaMuonModel.getValueAt(tblSachDaMuonSelectedRowIndex, 1).toString());
            int soLuong = Integer.valueOf(tblChiTietPhieuMuonModel.getValueAt(0, 4).toString());
            for (int i = 0; i <= listBook.size() - 1; i++) {
                if (listBook.get(i).BookID.equals(tblSachDaMuonModel.getValueAt(tblSachDaMuonSelectedRowIndex, 1).toString())) {
                    ++listBook.get(i).Available;
                    int rowUpdated = con.ExcuteSQLUpdateBookBookAvailble(new String[]{
                        String.valueOf(listBook.get(i).Available),
                        listBook.get(i).BookID
                    });
                    break;
                }
            }
            for (int j = tblBookModel.getRowCount() - 1; j >= 0; j--) {
                tblBookModel.removeRow(j);
            }
            for (int j = tblTimmuonModel.getRowCount() - 1; j >= 0; j--) {
                tblTimmuonModel.removeRow(j);
            }
            FillToTBLBook();
            FillToTBLTimMuon();
            tblChiTietPhieuMuonModel.setValueAt(String.valueOf(soLuong - 1), 0, 4);
            int amountUpdated = con.ExcuteSQLUpdateMemberCardAmount(new String[]{
                String.valueOf(soLuong - 1),
                tblSachDaMuonModel.getValueAt(tblSachDaMuonSelectedRowIndex, 0).toString()
            });
            tblSachDaMuonModel.removeRow(tblSachDaMuonSelectedRowIndex);
        }
    }//GEN-LAST:event_btnTraSachActionPerformed

    private void tblSachDaMuonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachDaMuonMouseClicked
        // TODO add your handling code here:
        tblSachDaMuonSelectedRowIndex = tblSachDaMuon.getSelectedRow();
    }//GEN-LAST:event_tblSachDaMuonMouseClicked

    private void btnTraPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraPhieuActionPerformed
        // TODO add your handling code here:
        if (!tblChiTietPhieuMuonModel.getValueAt(0, 4).toString().equals("0")) {
            JOptionPane.showMessageDialog(this, "Chưa trả hết sách", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        } else {
            listCard.remove(new DeleteCard().Delete(listCard, tblChiTietPhieuMuonModel.getValueAt(0, 0).toString()));
            if (tblChiTietPhieuMuonModel.getValueAt(0, 0).toString().indexOf("SV") >= 0) {
                con.ExcuteSQLDeleteStudentCard(tblChiTietPhieuMuonModel.getValueAt(0, 0).toString());
                for (int i = 0; i <= tblDanhSachPhieuModel.getRowCount() - 1; i++) {
                    tblDanhSachPhieuModel.removeRow(i);
                }
                FillToTBLDanhSachPhieu();
                txtTraSach.setText("");
                tblChiTietPhieuMuonModel.removeRow(0);
            } else {
                con.ExcuteSQLDeleteMemberCard(tblChiTietPhieuMuonModel.getValueAt(0, 0).toString());
                for (int i = 0; i <= tblDanhSachPhieuModel.getRowCount() - 1; i++) {
                    tblDanhSachPhieuModel.removeRow(i);
                }
                FillToTBLDanhSachPhieu();
                txtTraSach.setText("");
                tblChiTietPhieuMuonModel.removeRow(0);
            }
        }
    }//GEN-LAST:event_btnTraPhieuActionPerformed

    private void btnChonNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonNamActionPerformed
        // TODO add your handling code here:
        if (tblRevenueModel.getRowCount() > 0) {
            tblRevenueModel.removeRow(0);
            ResultSet rs1 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 1");
            ResultSet rs2 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 2");
            ResultSet rs3 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 3");
            ResultSet rs4 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 4");
            ResultSet rs5 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 5");
            ResultSet rs6 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 6");
            ResultSet rs7 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 7");
            ResultSet rs8 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 8");
            ResultSet rs9 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 9");
            ResultSet rs10 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 10");
            ResultSet rs11 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 11");
            ResultSet rs12 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 12");
            try {
                String t1 = "";
                String t2 = "";
                String t3 = "";
                String t4 = "";
                String t5 = "";
                String t6 = "";
                String t7 = "";
                String t8 = "";
                String t9 = "";
                String t10 = "";
                String t11 = "";
                String t12 = "";
                while (rs1.next()) {
                    t1 = rs1.getString("Tien");
                }
                while (rs2.next()) {
                    t2 = rs2.getString("Tien");
                }
                while (rs3.next()) {
                    t3 = rs3.getString("Tien");
                }
                while (rs4.next()) {
                    t4 = rs4.getString("Tien");
                }
                while (rs5.next()) {
                    t5 = rs5.getString("Tien");
                }
                while (rs6.next()) {
                    t6 = rs6.getString("Tien");
                }
                while (rs7.next()) {
                    t7 = rs7.getString("Tien");
                }
                while (rs8.next()) {
                    t8 = rs8.getString("Tien");
                }
                while (rs9.next()) {
                    t9 = rs9.getString("Tien");
                }
                while (rs10.next()) {
                    t10 = rs10.getString("Tien");
                }
                while (rs11.next()) {
                    t11 = rs11.getString("Tien");
                }
                while (rs12.next()) {
                    t12 = rs12.getString("Tien");
                }
                tblRevenueModel.addRow(new Object[]{
                    null, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12
                });
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            ResultSet rs1 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 1");
            ResultSet rs2 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 2");
            ResultSet rs3 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 3");
            ResultSet rs4 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 4");
            ResultSet rs5 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 5");
            ResultSet rs6 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 6");
            ResultSet rs7 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 7");
            ResultSet rs8 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 8");
            ResultSet rs9 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 9");
            ResultSet rs10 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 10");
            ResultSet rs11 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 11");
            ResultSet rs12 = con.getData("SELECT SUM(Price) Tien FROM MemberCard WHERE YEAR(BorrowDate) = " + String.valueOf(YCRevenue.getYear()) + "AND MONTH(BorrowDate) = 12");
            try {
                String t1 = "";
                String t2 = "";
                String t3 = "";
                String t4 = "";
                String t5 = "";
                String t6 = "";
                String t7 = "";
                String t8 = "";
                String t9 = "";
                String t10 = "";
                String t11 = "";
                String t12 = "";
                while (rs1.next()) {
                    t1 = rs1.getString("Tien");
                }
                while (rs2.next()) {
                    t2 = rs2.getString("Tien");
                }
                while (rs3.next()) {
                    t3 = rs3.getString("Tien");
                }
                while (rs4.next()) {
                    t4 = rs4.getString("Tien");
                }
                while (rs5.next()) {
                    t5 = rs5.getString("Tien");
                }
                while (rs6.next()) {
                    t6 = rs6.getString("Tien");
                }
                while (rs7.next()) {
                    t7 = rs7.getString("Tien");
                }
                while (rs8.next()) {
                    t8 = rs8.getString("Tien");
                }
                while (rs9.next()) {
                    t9 = rs9.getString("Tien");
                }
                while (rs10.next()) {
                    t10 = rs10.getString("Tien");
                }
                while (rs11.next()) {
                    t11 = rs11.getString("Tien");
                }
                while (rs12.next()) {
                    t12 = rs12.getString("Tien");
                }
                tblRevenueModel.addRow(new Object[]{
                    null, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12
                });
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnChonNamActionPerformed

    void FillToTBLSV() {
        int stt = 1;
        for (Student s : listSV) {
            String gioiTinh = "";
            if (s.getGender() == 1) {
                gioiTinh = "Nam";
            } else if (s.getGender() == 2) {
                gioiTinh = "Nữ";
            } else {
                gioiTinh = "Khác";
            }
            tblSVModel.addRow(new Object[]{
                stt,
                s.getUserID(),
                s.getName(),
                gioiTinh,
                s.getBirthDay().toString(),
                s.getPhoneNumber(),});
            stt++;
        }
    }

    void FillToTBLTV() {
        int stt = 1;
        for (Member s : listTV) {
            String gioiTinh = "";
            if (s.getGender() == 1) {
                gioiTinh = "Nam";
            } else if (s.getGender() == 2) {
                gioiTinh = "Nữ";
            } else {
                gioiTinh = "Khác";
            }
            tblTVModel.addRow(new Object[]{
                stt,
                s.getUserID(),
                s.getName(),
                gioiTinh,
                s.getBirthDay().toString(),
                s.getPhoneNumber(),});
            stt++;
        }
    }

    void FillToTBLTL() {
        for (Category c : listTL) {
            tblTLModel.addRow(new Object[]{
                c.CategoryID,
                c.Name
            });
        }
    }

    void ClearText() {
        txtMaSV.setText("");
        txtHoTenSV.setText("");
        rbtnSVNam.setSelected(true);
        dcSV.setCalendar(Calendar.getInstance());
        txtSDTSV.setText("");
        txtEmailSV.setText("");
        txtDiachiSV.setText("");
    }

    void ClearTextTV() {
        txtMaTV.setText("");
        txtHoTenTV.setText("");
        rbtnTVNam.setSelected(true);
        dcTV.setCalendar(Calendar.getInstance());
        txtSDTTV.setText("");
        txtEmailTV.setText("");
        txtDiachiTV.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BookPanel;
    private javax.swing.JPanel CategoryPanel;
    private com.toedter.calendar.JDateChooser DCHanTra;
    private com.toedter.calendar.JDateChooser DCNgayMuon;
    private javax.swing.JPanel FavoritePanel;
    private javax.swing.JPanel KhoPanel;
    private javax.swing.JPanel LowestPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel ManagePanel;
    private javax.swing.JPanel MemberPanel;
    private javax.swing.JPanel MuonPanel;
    private javax.swing.JPanel QuanLyCardPanel;
    private javax.swing.JPanel RevenuePanel;
    private javax.swing.JPanel ServicePanel;
    private javax.swing.JPanel SettingsPanel;
    private javax.swing.JPanel StatistcsPanel;
    private javax.swing.JPanel StudentPanel;
    private javax.swing.JPanel ThanhToanPanel;
    private javax.swing.JPanel TraPanel;
    private com.toedter.calendar.JYearChooser YCRevenue;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBorrow;
    private javax.swing.JButton btnCapNhatSV;
    private javax.swing.JButton btnCapNhatSach;
    private javax.swing.JButton btnCapNhatTV;
    private javax.swing.JButton btnCapNhatTheLoai;
    private javax.swing.JButton btnCatalogue;
    private javax.swing.JButton btnChonNam;
    private javax.swing.JButton btnChonSach;
    private javax.swing.JButton btnFavorite;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnLowest;
    private javax.swing.JButton btnManageCard;
    private javax.swing.JButton btnMember;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnRevenue;
    private javax.swing.JButton btnSach;
    private javax.swing.JButton btnService;
    private javax.swing.JButton btnSettings;
    private javax.swing.JButton btnStatistics;
    private javax.swing.JButton btnStudent;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnTheLoai;
    private javax.swing.JButton btnThemSV;
    private javax.swing.JButton btnThemSach;
    private javax.swing.JButton btnThemTV;
    private javax.swing.JButton btnThemTheLoai;
    private javax.swing.JButton btnTimPhieu;
    private javax.swing.JButton btnTraLai;
    private javax.swing.JButton btnTraPhieu;
    private javax.swing.JButton btnTraSach;
    private javax.swing.JButton btnUser;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXoaSV;
    private javax.swing.JButton btnXoaSach;
    private javax.swing.JButton btnXoaTV;
    private javax.swing.JButton btnXoaTheLoai;
    private javax.swing.JPanel cardKho;
    private javax.swing.JPanel cardManage;
    private javax.swing.JPanel cardService;
    private javax.swing.JPanel cardSettings;
    private javax.swing.JPanel cardThongke;
    private javax.swing.JComboBox<String> cbxFindBook;
    private javax.swing.JComboBox<String> cbxFindSV;
    private javax.swing.JComboBox<String> cbxFindTV;
    private javax.swing.JComboBox<String> cbxTheLoai;
    private javax.swing.JComboBox<String> cbxTimmuon;
    private com.toedter.calendar.JDateChooser dcSV;
    private com.toedter.calendar.JDateChooser dcTV;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton15;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JToolBar.Separator jSeparator15;
    private javax.swing.JToolBar.Separator jSeparator16;
    private javax.swing.JToolBar.Separator jSeparator17;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JToolBar jToolBar5;
    private javax.swing.JRadioButton rbtnSV;
    private javax.swing.JRadioButton rbtnSVKhac;
    private javax.swing.JRadioButton rbtnSVNam;
    private javax.swing.JRadioButton rbtnSVNu;
    private javax.swing.JRadioButton rbtnTV;
    private javax.swing.JRadioButton rbtnTVKhac;
    private javax.swing.JRadioButton rbtnTVNam;
    private javax.swing.JRadioButton rbtnTVNu;
    private javax.swing.ButtonGroup rbtngNguoiMuon;
    private javax.swing.ButtonGroup rbtngSVSex;
    private javax.swing.ButtonGroup rbtngTVSex;
    private javax.swing.JTable tblBook;
    private javax.swing.JTable tblCategory;
    private javax.swing.JTable tblChitietPhieumuon;
    private javax.swing.JTable tblDachon;
    private javax.swing.JTable tblDanhSachPhieu;
    private javax.swing.JTable tblFavorite;
    private javax.swing.JTable tblLowest;
    private javax.swing.JTable tblRevenue;
    private javax.swing.JTable tblSV;
    private javax.swing.JTable tblSachDaMuon;
    private javax.swing.JTable tblTV;
    private javax.swing.JTable tblThanhtoan;
    private javax.swing.JTable tblTimmuon;
    private javax.swing.JTextField txtDiachiSV;
    private javax.swing.JTextField txtDiachiTV;
    private javax.swing.JTextField txtEmailSV;
    private javax.swing.JTextField txtEmailTV;
    private javax.swing.JTextField txtFindBook;
    private javax.swing.JTextField txtFindSV;
    private javax.swing.JTextField txtFindTV;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtHoTenSV;
    private javax.swing.JTextField txtHoTenTV;
    private javax.swing.JTextField txtMaNguoiMuon;
    private javax.swing.JTextField txtMaPhieu;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtMaTV;
    private javax.swing.JTextField txtMaTheLoai;
    private javax.swing.JTextField txtNXB;
    private javax.swing.JTextField txtPhiMuon;
    private javax.swing.JTextField txtSDTSV;
    private javax.swing.JTextField txtSDTTV;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtSoLuongSach;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenSach;
    private javax.swing.JTextField txtTenTheLoai;
    private javax.swing.JTextField txtTimMuon;
    private javax.swing.JTextField txtTraSach;
    // End of variables declaration//GEN-END:variables

    private void ClearTextTL() {
        txtMaTheLoai.setText("");
        txtTenTheLoai.setText("");
    }

    private void FillToTBLBook() {
        for (Book b : listBook) {
            tblBookModel.addRow(new Object[]{
                b.BookID,
                b.Name,
                b.Author,
                b.Publisher,
                b.CategoryID,
                b.Price,
                b.Amount,
                b.Available
            });
        }
    }

    private void FillToTBLTimMuon() {
        for (Book b : listBook) {
            tblTimmuonModel.addRow(new Object[]{
                b.BookID,
                b.Name,
                b.Author,
                b.Publisher,
                b.CategoryID,
                b.Price,
                b.Amount,
                b.Available
            });
        }
    }

    private void ClearTextBook() {
        txtTenSach.setText("");
        txtTacGia.setText("");
        txtNXB.setText("");
        cbxTheLoai.setSelectedIndex(0);
        txtGia.setText("");
        txtSoLuong.setText("");
    }

    private void ClearTextThanhToan() {
        txtMaPhieu.setText("");
        txtMaNguoiMuon.setText("");
        txtSoLuongSach.setText("");
        txtPhiMuon.setText("");
        try {
            DCNgayMuon.setDate(df.parse(LocalDate.now().toString()));
            DCNgayMuon.setEnabled(false);
            DCHanTra.setDate(df.parse(LocalDate.now().plusMonths(3).toString()));
        } catch (ParseException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = tblThanhToanModel.getRowCount() - 1; i >= 0; i--) {
            tblThanhToanModel.removeRow(i);
        }
        SachDachon.clear();
    }

    private void FillToTBLDanhSachPhieu() {
        listCard.sort(new SortByCardID());
        for (Card c : listCard) {
            String ReturnStatus = "";
            String ExpiryStatus = "";
            if (c.getReturnStatus() == 1) {
                ReturnStatus = "N";
            } else {
                ReturnStatus = "R";
            }
            if (c.getExpiryStatus() == 1) {
                ExpiryStatus = "U";
            } else {
                ExpiryStatus = "E";
            }
            String status = ReturnStatus + "-" + ExpiryStatus;
            tblDanhSachPhieuModel.addRow(new Object[]{
                c.getCardID(),
                c.getUserID(),
                c.getBorrowDate().toString(),
                c.getExpiryDate().toString(),
                c.getAmount(),
                status,
                c.getTotalCost()
            });
        }
    }
}
